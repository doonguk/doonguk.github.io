{"componentChunkName":"component---src-templates-blog-post-js","path":"/react/react-apollo-with-graphql-tutorial/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"4fa5db53-4774-594e-a34a-7e8d9b3ff118","excerpt":"repository : https://github.com/net-lmcd/apollo-graphql-tutorial React Apollo client에서 GraphQL를 사용해보는 튜토리얼 입니다. 프로젝트는 CRA기반 으로 구성하였고 graphql endpoint는 https://api.github.com/graphql 입니다. 1-1. Client 생성 uri : 우리가 data를 fetch할 graphql endpoint uri request : 위와 같이 코딩할 경우 모든 request…","html":"<p>repository : <a href=\"https://github.com/net-lmcd/apollo-graphql-tutorial\">https://github.com/net-lmcd/apollo-graphql-tutorial</a></p>\n<p>React Apollo client에서 GraphQL를 사용해보는 튜토리얼 입니다. 프로젝트는 CRA기반 으로 구성하였고 graphql endpoint는 <a href=\"https://api.github.com/graphql\">https://api.github.com/graphql</a> 입니다.</p>\n<h3 id=\"1-1-client-생성\"><a href=\"#1-1-client-%EC%83%9D%EC%84%B1\" aria-label=\"1 1 client 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-1. Client 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//index.js</span>\n<span class=\"token keyword\">import</span> ApolloClient <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-boost'</span>\n\n<span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  uri <span class=\"token punctuation\">:</span> <span class=\"token string\">'graphql endpoint uri'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">request</span> <span class=\"token punctuation\">:</span> <span class=\"token parameter\">operation</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    operation<span class=\"token punctuation\">.</span><span class=\"token function\">setContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      headers <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        authorization <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer token</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token comment\">// token 필요한 경우</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>uri : 우리가 data를 fetch할 graphql endpoint uri</li>\n<li>request : 위와 같이 코딩할 경우 모든 request에서 헤더에 토큰을 실어 보낸다.</li>\n</ul>\n<br/>\n<h3 id=\"1-2-react에-client-연동\"><a href=\"#1-2-react%EC%97%90-client-%EC%97%B0%EB%8F%99\" aria-label=\"1 2 react에 client 연동 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-2. React에 Client 연동</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ApolloProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-apollo'</span>\n\n<span class=\"token operator\">...</span><span class=\"token comment\">//1-1 코드</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token operator\">&lt;</span>ApolloProvider client<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>client<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  \t<span class=\"token operator\">&lt;</span>App<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ApolloProvider<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>ApolloProvider 컴포넌트로 최상위 컴포넌트를 감싸주게 되면 react-context provider와 비슷하게 어떤 컴포넌트든지 client에 접근할 수 있게된다.</li>\n</ul>\n<br/>\n<h3 id=\"2-1--컴포넌트에서-data-fetch하기\"><a href=\"#2-1--%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C-data-fetch%ED%95%98%EA%B8%B0\" aria-label=\"2 1  컴포넌트에서 data fetch하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-1.  컴포넌트에서 Data Fetch하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//App.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-apollo'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-boost'</span>\n\n<span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n {\n\tviewer{\n \t\tname\n\t\temail\n  }\n }\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n  \t<span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"App\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Query query<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>query<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      \t<span class=\"token punctuation\">{</span> <span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>loading<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>loading<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n          <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n            \t<span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n              \t<span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>viewer<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>viewer<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n         <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Query<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code>react-apollo</code> 모듈에서는 Query컴포넌트를 제공해주는데 query라는 변수를 props로 받고, 우리는 이 query를 정의할 수 있다.  ( 여기서 잠깐, GraphQL에서 Query가 의미하는건 API로부터 data를 가져오는 것 이고, Mutaion이 의미하는 것은 data를 지우거나 업데이트 한다는 의미이다.)</li>\n<li>\n<p>Query컴포넌트에 의해 나오는 결과값은 3가지 상태를 가지고 있다 ( loading, error, data )</p>\n<p>loading은 request가 진행중일 경우, error는 request가 실패한 경우, data는 query의 결과값 이다.</p>\n</li>\n</ul>\n<br/>\n<h3 id=\"2-2-쿼리에-변수-만들기\"><a href=\"#2-2-%EC%BF%BC%EB%A6%AC%EC%97%90-%EB%B3%80%EC%88%98-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"2 2 쿼리에 변수 만들기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-2. 쿼리에 변수 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//MyRepositories.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-apollo'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-boost'</span>\n\n<span class=\"token keyword\">const</span> reposQuery <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n query MyRepositories($first : Int!){\n   viewer{\n    repositories(first : $first){\n      edges{\n        node {\n          name\n        }\n      }\n    }\n  }\n }\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyRepositories</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Query query<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>reposQuery<span class=\"token punctuation\">}</span> variables<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>first <span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\"><span class=\"token punctuation\">{</span>loading<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loading<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>loading<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n                <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Top <span class=\"token number\">10</span> repositories<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n                  <span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>viewer<span class=\"token punctuation\">.</span>repositories<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                      <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n                          <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n                      <span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                  <span class=\"token punctuation\">}</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Query<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MyRepositories</code></pre></div>\n<ul>\n<li>쿼리에 변수를 주고 싶다면 $ 를 사용하면 된다.</li>\n<li>Query 컴포넌트에서 variables props로 변수를 전달해주면 된다.</li>\n</ul>\n<br/>\n<h3 id=\"2-3-more-fetch\"><a href=\"#2-3-more-fetch\" aria-label=\"2 3 more fetch permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-3 More Fetch</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-apollo'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-boost'</span>\n\n<span class=\"token keyword\">const</span> reposQuery <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n query MyRepositories($first : Int!){\n   viewer{\n    repositories(first : $first){\n      edges{\n        node {\n          name\n        }\n      }\n    }\n  }\n }\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyRepositories</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleMore</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">current<span class=\"token punctuation\">,</span> fetchMore<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchMore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      variables <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>first <span class=\"token punctuation\">:</span> current <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">updateQuery</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>fetchMoreResult<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fetchMoreResult<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> prev\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> prev<span class=\"token punctuation\">,</span> fetchMoreResult<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Query query<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>reposQuery<span class=\"token punctuation\">}</span> variables<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>first <span class=\"token punctuation\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>loading<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> fetchMore<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loading<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>loading<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n          <span class=\"token keyword\">let</span> current <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>viewer<span class=\"token punctuation\">.</span>repositories<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span>length\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n                <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>First <span class=\"token punctuation\">{</span>current<span class=\"token punctuation\">}</span> repositories<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>viewer<span class=\"token punctuation\">.</span>repositories<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                      <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n                          <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n                      <span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">}</span>\n                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token function\">handleMore</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">,</span> fetchMore<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Fetch More<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Query<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MyRepositories</code></pre></div>\n<p>더 많은 data를 fetch하기 위해서는 Query 컴포넌트가 제공해주는 fetchMore 함수를 이용하면 된다.</p>\n<p>fetchMore 함수의 인자로는 variables, updateQuery가 있다. 먼저 variables는 GraphQL query에 전달한 쿼리변수를 의미하고, updateQuery는 이전 data와 update된 후 data를 합치는 기능(Merge)을 하고 컴포넌트를 re-rendering 시킨다.</p>\n<br/>\n<h3 id=\"3-mutation\"><a href=\"#3-mutation\" aria-label=\"3 mutation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Mutation</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Mutation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-apollo\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"apollo-boost\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> addStarquery <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  mutation AddStar($repoid: ID!) {\n    addStar(input: { starrableId: $repoid }) {\n      starrable {\n        stargazers {\n          totalCount\n        }\n        viewerHasStarred\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AddStar</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Mutation mutation<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>addStarquery<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">addStar<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> loading<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>button\n                onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token function\">addStar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> variables<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> repoid<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">refetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n              <span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">}</span>\n                Addstar\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n\n              <span class=\"token punctuation\">{</span>loading <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>loading<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">{</span>error <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Mutation<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AddStar<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>Query 컴포넌트는 백엔드 API로 부터 데이터를 가져오기만 가능하다, 데이터를 업데이트 하거나 삭제 하기 위해서는 Matation 컴포넌트를 사용해야 한다.</li>\n<li>Mutaion이 한번 완료되면 백엔드에서 데이터를 다시 반환한다.</li>\n<li>Matation 컴포넌트 내부 함수의 첫번째 파라미터로는 Mutaion을 일으키는 함수, 두번째 파라미터로는 백엔드로 부터 받은 객체이다 ( data를 포함한 )</li>\n<li>Mutaion이 완료되면 <code>refetch()</code> 메소드를 통해 UI를 업데이트 할 수 있다. </li>\n</ul>","frontmatter":{"title":"react apollo with graphql tutorial","date":"November 07, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react/react-apollo-with-graphql-tutorial/","previous":{"fields":{"slug":"/linux/생활코딩-리눅스-강좌( 기초-1 )/"},"frontmatter":{"title":"생활코딩 리눅스 강좌(기초-1)","category":"linux"}},"next":{"fields":{"slug":"/linux/생활코딩-리눅스-강좌( 기초-2 )/"},"frontmatter":{"title":"생활코딩 리눅스 강좌(기초-2)","category":"linux"}}}}}