{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"튜플 리스트와 비교하여 생각하자. 튜플 자료형은 ( 순서 O, 중복 O, 수정X, 삭제X ) 즉, 한번 선언하면 끝 까지 쓴다. 변하면 안되는 데이터를 정의 해놓으면 좋다. 선언 마지막 f처럼 가로가 없어도 튜플 선언이 된다. 인덱싱 리스트 자료형과 같은 방법으로 인덱싱이 가능하다. 튜플에서 리스트로 형 변환이 하게 되면, 불변성이 사라지고 리스트 자료형…","fields":{"slug":"/python/파이썬-기초-정리(자료형-튜플)/"},"frontmatter":{"date":"November 19, 2019","title":"파이썬 기초 정리(자료형-튜플)","category":"python"}}},{"node":{"excerpt":"리스트 리스트 자료형은 순서 있고, 중복, 수정, 삭제가 가능한 유일한 자료형 이다. 리스트 선언 리스트 인덱싱 인덱싱은 내가 원하는 데이터를 꺼내오는 과정  문자열은 시퀀스 이기 때문에 리스트로 형 변환을 하게 되면 한글자 한글자 리스트 형태로 분해가 된다. 리스트 슬라이싱 리스트 연산 리스트 + 리스트 = 리스트, 리스트의 연산은 리스트가 나온다. 리…","fields":{"slug":"/python/파이썬-기초-정리(리스트)/"},"frontmatter":{"date":"November 18, 2019","title":"파이썬 기초 정리(자료형-리스트)","category":"python"}}},{"node":{"excerpt":"문자열 len() : 문자열의 길이를 구할 때 사용 빈 문자열을 선언할 때 str() 사용하자 \\ : 이스케이프 문자열, 자주 사용하는 이스케이프 문자열은 \\n ( 개행 처리 ), \\t( tab 처리 )  Raw string ( r’ ’ )은 이스케이프 문자열을 있는 그대로 출력. Python에서 = 뒤에오는 \\ 는 변수에 값을 바인딩 한다는 의미 문자열…","fields":{"slug":"/python/파이썬-기초-정리(문자열)/"},"frontmatter":{"date":"November 17, 2019","title":"파이썬 기초 정리(자료형-문자열)","category":"python"}}},{"node":{"excerpt":"Group user(소유자) 도 other도 아닌 어떤 사용자들을 그룹화 해보자 /var 폴더의 소유자는  image . 부분을 확인 해보면 root 이다. 따라서 /var 디렉토리에 mkdir 프로그램을 실행 하기 위해서는 access mode의 other부분에 쓰기(w) 권한이 있어야 한다. 첫번째 방법은 root 사용자로 로그인 ( su - root…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(group)/"},"frontmatter":{"date":"November 16, 2019","title":"생활코딩 리눅스 강좌(Group)","category":"linux"}}},{"node":{"excerpt":"Permission 의 예시 ls -l  의 Standard output 중에서 왼쪽 donguk이 나타내것은 소유자가 donguk 이라는 뜻 , 마지막 코드는 echo ‘hi’ 의 출력 값이 perm.txt에 출력 되어 저장이 된다. ( 물론 nano, vi 등 에디터를 이용해서 perm.txt 수정 가능 ) perm.txt의 소유자가 donguk인데 …","fields":{"slug":"/linux/생활코딩-리눅스-강좌(permission)/"},"frontmatter":{"date":"November 16, 2019","title":"생활코딩 리눅스 강좌(Permission)","category":"linux"}}},{"node":{"excerpt":"id, who 유닉스는 다중사용자 시스템 uid는 user의 id, gid는 group의 id 즉 내가 staff라는 group에 속해 있다는 뜻 현재 내 맥북에는 hong 이라는 유저만 접속 해 있다. 관리자와 일반 사용자 ( super user(root) vs user ) Shell에서 $는 일반사용자를 나타내고 #은 관리자( root) 를 나타낸다.…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(user)/"},"frontmatter":{"date":"November 16, 2019","title":"생활코딩 리눅스 강좌(user)","category":"linux"}}},{"node":{"excerpt":"CRON CRON 기본 명령어 정기적으로 명령을 실행시켜주는 소프트웨어 ( ex 백업, 정기적인 데이터 전송, 정기적으로 인터넷으로 시간조정? ) crontab -e  : 정기적으로 실행 시키고 싶은 작업을 설정 할 수 있음.  crontab -l : 처리한 cron 들을 확인 할 수 있다. crontab -r  : cron 삭제 CRON 주기 설정 ta…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(cron,-.bashrc)/"},"frontmatter":{"date":"November 16, 2019","title":"생활코딩 리눅스 강좌(cron, .bashrc)","category":"linux"}}},{"node":{"excerpt":"Daemon 의 개념 데몬에 해당하는 프로그램은 항상  켜져 있음. ls, mkdir, cd 이런 프로그램들은 데몬이 아님. 소위 server ( 예를들어 web server ) 라고 불리는 프로그램은 데몬에 해당한다. 이런 데몬에 해당하는 프로그램을 service 라고도 부른다. Daemon의 예시 컴퓨터가 부팅될 때 자동으로 Start 시키려면? 맨 …","fields":{"slug":"/linux/생활코딩-리눅스-강좌(daemon)/"},"frontmatter":{"date":"November 14, 2019","title":"생활코딩 리눅스 강좌(Daemon)","category":"linux"}}},{"node":{"excerpt":"컴퓨터 구조, 프로세스 모니터링, 백그라운드 실행 컴퓨터 구조 Storage SSD, HDD 같은 저장공간을 의미 가격이 낮고, 용량이 크지만 저장하고 읽는데 시간이 오래걸린다 Memory RAM Storage와 반대의 특성을 지닌다. ( 가격이 높고, 용량 작지만 저장하고 읽는데 소요되는 시간이 적음) Processor ( * Process 아님 ) C…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(프로세스와-실행)/"},"frontmatter":{"date":"November 13, 2019","title":"생활코딩 리눅스 강좌(프로세스와 실행)","category":"linux"}}},{"node":{"excerpt":"Directory Structure https://www.thegeekstuff.com/2010/09/linux-file-system-structure/ 참고 / : 최상위 디렉토리 ( root ) /bin : binary 줄임말, 컴퓨터에서는 실행가능한 프로그램을 binary라고함 > 프로그램들이 모여있는 directory /sbin : 시스템 관리자가…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(directory,-find)/"},"frontmatter":{"date":"November 10, 2019","title":"생활코딩 리눅스 강좌(directory, find)","category":"linux"}}},{"node":{"excerpt":"자료형 종류 파이썬 지원 자료형 int : 정수, float : 실수, complex : 복소수, bool : 불린 str : 문자열(시퀀스), list : 리스트(시퀀스), tuple : 튜플(시퀀스) set : 집합, dict : 사전 m은 내부적으로 int형 객체(<class ‘int’>)를 생성하고, n은 float형 객체(<class ‘float…","fields":{"slug":"/python/파이썬-기초-정리(자료형-숫자형)/"},"frontmatter":{"date":"November 09, 2019","title":"파이썬 기초 정리(자료형-숫자형)","category":"python"}}},{"node":{"excerpt":"print variables type(variable) : variable의 자료형 보여주는 함수 x=y=z=100 : 동시선언 가능 위 print구문이 내부적으로 300이라는 값을 출력하는 과정은 300 에 맞는 Object(<class ‘int’>)를 생성 하고 값을 생성하고(int(300)) 이 값을 출력 한다. 그리고 변수 생성도 이와 같은 절차를…","fields":{"slug":"/python/파이썬-기초-정리(print,-variable)/"},"frontmatter":{"date":"November 09, 2019","title":"파이썬 기초 정리(print, variable)","category":"python"}}},{"node":{"excerpt":"Shell harware - 컴퓨터의 기계적인 부분들 ( 메모리, 하드디스크 ,SSD, CPU 등등..) Kernel - 하드웨어를 제어하는 프로그램 ( 운영체제에서 코어역할을 한다.) Shell - 우리가 입력한 명령을 Kernel이 이해할수 있게 kernel에게 전달해줌. Kernel은 이를 하드웨어에 이해할 수 있게 전달한다.  echo $0 : 현…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(shell)/"},"frontmatter":{"date":"November 09, 2019","title":"생활코딩 리눅스 강좌(Shell)","category":"linux"}}},{"node":{"excerpt":"IO Redirection IO Redirection ( Input Ouput Redirection ) : input 과 output의 방향을 바꾼다 UNIX 계열의 시스템은 Standard Input( Command ) 이 주어지면 Unix process를 거쳐 Standard output을 내보냄 ls -l 1> result.txt : ls -l 의 …","fields":{"slug":"/linux/생활코딩-리눅스-강좌(IO-Redirection)/"},"frontmatter":{"date":"November 09, 2019","title":"생활코딩 리눅스 강좌(IO Redirection)","category":"linux"}}},{"node":{"excerpt":"cp source target dir : source 파일을 target dir에 복사 ls -l dir name :  dir name 안에 있는 파일 정보 확인 mv source target dir : source 파일을 target dir로 이동시킨다.  target dir 와 현재위치가 같다면 파일이름을 변경 시킨다.  sudo : ( super u…","fields":{"slug":"/linux/생활코딩-리눅스-강좌( 기초-2 )/"},"frontmatter":{"date":"November 08, 2019","title":"생활코딩 리눅스 강좌(기초-2)","category":"linux"}}},{"node":{"excerpt":"repository : https://github.com/net-lmcd/apollo-graphql-tutorial React Apollo client에서 GraphQL를 사용해보는 튜토리얼 입니다. 프로젝트는 CRA기반 으로 구성하였고 graphql endpoint는 https://api.github.com/graphql 입니다. 1-1. Client …","fields":{"slug":"/react/react-apollo-with-graphql-tutorial/"},"frontmatter":{"date":"November 07, 2019","title":"react apollo with graphql tutorial","category":"react"}}},{"node":{"excerpt":"명령어로 컴퓨터를 제어하는 방식을 CLI ( Command Line Interface ) 라고 한다. ls  현재 디렉토리의 파일목록 확인 ( 자세하게 보기는 ls -l) ls -l 했을때 맨 앞에 d 붙어 있으면 디렉토리, 아니면 파일 유닉스나 리눅스에서는 .으로 시작하는 파일은 기본적으로 감춰진 파일, 확인 하려면? ls -a .으로 시작하는 파일 출…","fields":{"slug":"/linux/생활코딩-리눅스-강좌( 기초-1 )/"},"frontmatter":{"date":"November 07, 2019","title":"생활코딩 리눅스 강좌(기초-1)","category":"linux"}}},{"node":{"excerpt":"1. 프로토콜 버퍼란? 프로토콜 버퍼는 XML, JSON과 같은  직렬화 데이터 구조 이다. 여기서 직렬화 데이터 구조의 예시를 잠깐 들면, hello를 ‘문자열 직렬화’ 할 경우 8(h) 65(e) 6C(l) 6C(l) 6F(o) 로 표현되고, 어떤 객체를 ‘JSON 포맷 직렬화’ 할 경우 {‘something’ : ‘something value’} 처…","fields":{"slug":"/cs/프로토콜-버퍼(protocol-buffer)/"},"frontmatter":{"date":"November 07, 2019","title":"프로토콜 버퍼(Protocol Buffer)","category":"cs"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}