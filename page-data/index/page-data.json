{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"자료형 종류 파이썬 지원 자료형 int : 정수, float : 실수, complex : 복소수, bool : 불린 str : 문자열(시퀀스), list : 리스트(시퀀스), tuple : 튜플(시퀀스) set : 집합, dict : 사전 m은 내부적으로 int형 객체(<class ‘int’>)를 생성하고, n은 float형 객체(<class ‘float…","fields":{"slug":"/python/파이썬-기초-강좌(자료형-숫자형)/"},"frontmatter":{"date":"November 09, 2019","title":"파이썬 기초 강좌(자료형-숫자형)","category":"python"}}},{"node":{"excerpt":"print variables type(variable) : variable의 자료형 보여주는 함수 x=y=z=100 : 동시선언 가능 위 print구문이 내부적으로 300이라는 값을 출력하는 과정은 300 에 맞는 Object(<class ‘int’>)를 생성 하고 값을 생성하고(int(300)) 이 값을 출력 한다. 그리고 변수 생성도 이와 같은 절차를…","fields":{"slug":"/python/파이썬-기초-강좌(print,-variable)/"},"frontmatter":{"date":"November 09, 2019","title":"파이썬 기초 강좌(print, variable)","category":"python"}}},{"node":{"excerpt":"Shell harware - 컴퓨터의 기계적인 부분들 ( 메모리, 하드디스크 ,SSD, CPU 등등..) Kernel - 하드웨어를 제어하는 프로그램 ( 운영체제에서 코어역할을 한다.) Shell - 우리가 입력한 명령을 Kernel이 이해할수 있게 kernel에게 전달해줌. Kernel은 이를 하드웨어에 이해할 수 있게 전달한다.  echo $0 : 현…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(shell)/"},"frontmatter":{"date":"November 09, 2019","title":"생활코딩 리눅스 강좌(Shell)","category":"linux"}}},{"node":{"excerpt":"IO Redirection IO Redirection ( Input Ouput Redirection ) : input 과 output의 방향을 바꾼다 UNIX 계열의 시스템은 Standard Input( Command ) 이 주어지면 Unix process를 거쳐 Standard output을 내보냄 ls -l 1> result.txt : ls -l 의 …","fields":{"slug":"/linux/생활코딩-리눅스-강좌(IO-Redirection)/"},"frontmatter":{"date":"November 09, 2019","title":"생활코딩 리눅스 강좌(IO Redirection)","category":"linux"}}},{"node":{"excerpt":"cp source target dir : source 파일을 target dir에 복사 ls -l dir name :  dir name 안에 있는 파일 정보 확인 mv source target dir : source 파일을 target dir로 이동시킨다.  target dir 와 현재위치가 같다면 파일이름을 변경 시킨다.  sudo : ( super u…","fields":{"slug":"/linux/생활코딩-리눅스-강좌( 기초-2 )/"},"frontmatter":{"date":"November 08, 2019","title":"생활코딩 리눅스 강좌(기초-2)","category":"linux"}}},{"node":{"excerpt":"repository : https://github.com/net-lmcd/apollo-graphql-tutorial React Apollo client에서 GraphQL를 사용해보는 튜토리얼 입니다. 프로젝트는 CRA기반 으로 구성하였고 graphql endpoint는 https://api.github.com/graphql 입니다. 1-1. Client …","fields":{"slug":"/react/react-apollo-with-graphql-tutorial/"},"frontmatter":{"date":"November 07, 2019","title":"react apollo with graphql tutorial","category":"react"}}},{"node":{"excerpt":"명령어로 컴퓨터를 제어하는 방식을 CLI ( Command Line Interface ) 라고 한다. ls  현재 디렉토리의 파일목록 확인 ( 자세하게 보기는 ls -l) ls -l 했을때 맨 앞에 d 붙어 있으면 디렉토리, 아니면 파일 유닉스나 리눅스에서는 .으로 시작하는 파일은 기본적으로 감춰진 파일, 확인 하려면? ls -a .으로 시작하는 파일 출…","fields":{"slug":"/linux/생활코딩-리눅스-강좌( 기초-1 )/"},"frontmatter":{"date":"November 07, 2019","title":"생활코딩-리눅스-강좌( 기초-1 )","category":"linux"}}},{"node":{"excerpt":"1. 프로토콜 버퍼란? 프로토콜 버퍼는 XML, JSON과 같은  직렬화 데이터 구조 이다. 여기서 직렬화 데이터 구조의 예시를 잠깐 들면, hello를 ‘문자열 직렬화’ 할 경우 8(h) 65(e) 6C(l) 6C(l) 6F(o) 로 표현되고, 어떤 객체를 ‘JSON 포맷 직렬화’ 할 경우 {‘something’ : ‘something value’} 처…","fields":{"slug":"/cs/프로토콜-버퍼(protocol-buffer)/"},"frontmatter":{"date":"November 07, 2019","title":"프로토콜 버퍼(Protocol Buffer)","category":"cs"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}