{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"SPA & MPA image SPA (Single Page Application) 웹 어플리케이션에 필요한 모든 정적 컨텐츠를 최초 한번에 다운로드 받는다. 그 후 새로운 페이지 요청이 있을 경우, 페이지 갱신에 필요한 데이터만 전달받아 페이지를 갱신한다. 즉, 하나의 HTML을 기반으로 자바스크립트를 이용해 동적으로 화면의 컨텐츠를 바꾸는 방식의 웹 어…","fields":{"slug":"/cs/csr-&-ssr/"},"frontmatter":{"date":"June 04, 2020","title":"CSR & SSR","category":"cs"}}},{"node":{"excerpt":"웹 서버와 WAS(Web Application Server) 웹 서버와 WAS의 차이는 어떤 타입의 컨텐츠를 제공하느냐의 차이이다. 웹서버는 정적인 컨텐츠(html, css, js)를 제공하는 서버이다. 대표적으로 Apache와 Nginx가 있다. WAS는 DB 조회나, 어떤 로직을 처리해야 하는 동적인 컨텐츠를 제공하는 서버이다. 대표적으로 Tomcat…","fields":{"slug":"/cs/웹-서버-&-was/"},"frontmatter":{"date":"June 03, 2020","title":"웹 서버 & WAS","category":"cs"}}},{"node":{"excerpt":"자바스크립트는 프로토타입 기반 언어라고 불린다. 프로토타입이라는게 뭘까? 간단한 예시 a 와 b 인스턴스는 와 를 공통으로 가지고 있는데 메모리에는 eyes와 nose가 각각 2개씩 총 4개가 할당된다. 만약 100개의 인스턴스를 만들면 200개의 변수가 메모리에 할당된다. 이런 문제를  으로 해결할 수 있다! 이게 가능한 이유는 이라는 빈 객체가 존재하…","fields":{"slug":"/javascript/js의--프로토타입/"},"frontmatter":{"date":"June 03, 2020","title":"JS의 프로토타입","category":"javascript"}}},{"node":{"excerpt":"콜스택, 메모리힙? 자바스크립트 엔진이 구동되면서 코드를 읽고 실행하는 과정에서 중요한 두단계가 있다. 정보(ex 변수, 함수)를 특정한 장소에 저장하는 것과 현재 실행되고 있는 코드를 트래킹하는 작업이 그 두가지이다. 여기서 정보를 저장하는 공간(Memory Allocation이 발생하는 공간)을 메모리 힙(Memory Heap)이고, 실행 중인 코드를…","fields":{"slug":"/javascript/메모리-힙-&-콜-스택/"},"frontmatter":{"date":"June 03, 2020","title":"메모리 힙 & 콜 스택","category":"javascript"}}},{"node":{"excerpt":"Longest Substring Without Repeating Characters 중복된 문자 없이 가~~장 긴 Substring을 구하는 문제이다. 시간복잡도 O(n) 아이디어 문자의 인덱스를 해시에 저장하여 불필요한 연산을 줄인다. 실수 했던 부분들 만약  에 저장된 index가 0 이라면  를 했을 때 0은 한 값이기 때문에 false가 나온다 (…","fields":{"slug":"/leetcode/20200529-리트코드/"},"frontmatter":{"date":"May 29, 2020","title":"20200529 리트코드","category":"leetcode"}}},{"node":{"excerpt":"1. 렌더링 엔진 대부분의 브라우저는 렌더링을 수행하는 렌더링 엔진을 가지고 있다. 다만 모든 브라우저가 같은 렌더링 엔진을 사용하지는 않는다. 사파리의 경우 대부분이 알고있는  엔진을 사용한다. 각 브라우저별로 테스트를 수행하여 여러 브라우저의 호환성에 문제가 없는지 검사해야한다. 1.5. DOM 과 BOM 렌더링 과정을 알기전에 DOM과 BOM을 알고…","fields":{"slug":"/cs/브라우저-렌더링-과정/"},"frontmatter":{"date":"May 27, 2020","title":"브라우저 렌더링 과정","category":"cs"}}},{"node":{"excerpt":"Add Two Numbers 입력으로 양의 정수가 저장된 가 주어질 때 각 리스트를 reverse한 값을 더하고 다시 로 만드는 문제이다. Js에서는 같은 풀이로 풀면 두 리스트의 합이 1경이 넘어간 시점부터 합을 리스트로 바꾸는 과정에서 잘못된 연산을 한다. -(2⁵³-1) 부터 2⁵³ -1 까지는 정확히 IEEE-754로 표현될 수 있지만, 그 초과와…","fields":{"slug":"/leetcode/20200525-리트코드/"},"frontmatter":{"date":"May 27, 2020","title":"20200525 리트코드","category":"leetcode"}}},{"node":{"excerpt":"1. 가장 높은 탑 쌓기 밑면이 정사각형인 직육면체 벽돌들을 사용하여 탑을 쌓고자 한다. 탑은 벽돌을 한 개씩 아래 에서 위로 쌓으면서 만들어 간다. 아래의 조건을 만족하면서 가장 높은 탑을 쌓을 수 있는 프 로그램을 작성하시오. (조건1) 벽돌은 회전시킬 수 없다. 즉, 옆면을 밑면으로 사용할 수 없다.\n (조건2) 밑면의 넓이가 같은 벽돌은 없으며, …","fields":{"slug":"/algorithm/20200525-알고리즘/"},"frontmatter":{"date":"May 26, 2020","title":"20200525 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"와 는 모두 DOM 이벤트를 기반으로 실행하는 자바스크립트를 성능상의 이유로  를 제어하는 방법이다. 사용예시 사용자가 창 크기 조정을 멈출 때까지 기다렸다가  사용 사용자가 키보드 입력을 중지 할 때까지  요청을 발생시키지 않기 위해 페이지의 스크롤에 따른 렌더링 앱에서 요소를 드래그 할 때 좋은 성능을 보장하기 위해 등등.. Debounce 연이어 호…","fields":{"slug":"/javascript/debounce-와-throttle/"},"frontmatter":{"date":"May 20, 2020","title":"Debounce 와 Throttle","category":"javascript"}}},{"node":{"excerpt":"1. 이벤트 핸들러를 등록하는 방법 인라인 이벤트 핸들러 방식 이때 함수가 즉시 호출되는 것이 아니다.   요소의  프로퍼티에  가 할당되는 구조이다. 따라서 여러개의 핸들러 함수가 등록될 수 있다. 여기서  는 이벤트 핸들러 함수가 일반 함수로서 호출되므로  를 가리킨다. 이벤트 핸들러 프로퍼티 방식 이 방식은 하나의 요소에 하나의 이벤트 핸들러 만 등…","fields":{"slug":"/javascript/javascript-event/"},"frontmatter":{"date":"May 20, 2020","title":"Javascript Event","category":"javascript"}}},{"node":{"excerpt":"함수가 생성자 함수로 사용된 건지 엄밀히 체크하자.  로 체크 생성자 함수로 호출되지 않은 함수안에서  는 전역 객체를 가리킨다.  하지만 좀 더 엄밀히 체크할 필요가 있는 것 같다.  로 체크  함수가 생성자 함수로 호출되면,  은 함수 자체를 가리킨다.  로 체크 함수가 생성자 함수로 호출되면,  는 생성자 함수의  이다. 같은 방법으로 조금 추상화 …","fields":{"slug":"/javascript/vanilajs-스터디-2주차-피드백/"},"frontmatter":{"date":"May 18, 2020","title":"VanilaJS 스터디 2주차 피드백","category":"javascript"}}},{"node":{"excerpt":"1. 최대 부분 증가수열 N개의 자연수로 이루어진 수열이 주어졌을 때, 그 중에서 가장 길게 증가하는(작은 수에서 큰 수로) 원소들의 집합을 찾는 프로그램을 작성하라. 예를 들어, 원소가 2, 7, 5, 8, 6, 4, 7, 12, 3 이면 가장 길게 증가하도록 원소들을 차례대로 뽑아내면 2, 5, 6, 7, 12를 뽑아내어 길 이가 5인 최대 부분 증가…","fields":{"slug":"/algorithm/20200512-알고리즘/"},"frontmatter":{"date":"May 12, 2020","title":"20200512 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"코드: https://github.com/doonguk/VanilaJS-Study 1.  h1 Tag 글씨 크기를 위해 제목 태그를 사용하면 안된다. 제목 단계를 건너뛰는 것을 피하자. 언제나  으로 시작해서, 로 순차적으로 기입해야 한다. 페이지 당 하나의  만 사용 해야한다. (  은 가장 중요한 제목이니까 논리적으로 여러개 있을 수 없지!) 2.  …","fields":{"slug":"/javascript/vanilajs-스터디-1주차-피드백/"},"frontmatter":{"date":"May 11, 2020","title":"VanilaJS 스터디 1주차 피드백","category":"javascript"}}},{"node":{"excerpt":"https://poiemaweb.com/js-this 를 공부하고 정리 들어가기 전에, JS의 함수는 호출될 때 매개변수로 전달되는 인자값 이외에  객체와 를 암묵적으로 전달받음 는 함수로 전달된 매개변수의 값들이 유사배열의 형태로 저장되어 있다.  는 이터러블이다. 따라서 순회가 가능하다. 함수 호출 방식과 this 바인딩 JS에서는 함수를 호출할 때 …","fields":{"slug":"/javascript/javascript-this/"},"frontmatter":{"date":"May 08, 2020","title":"Javascript this","category":"javascript"}}},{"node":{"excerpt":"1. 호텔 방 배정 본 문제는 정확성과 효율성 테스트 각각 점수가 있는 문제입니다. 스노우타운에서 호텔을 운영하고 있는 스카피는 호텔에 투숙하려는 고객들에게 방을 배정하려 합니다. 호텔에는 방이 총 k개 있으며, 각각의 방은 1번부터 k번까지 번호로 구분하고 있습니다. 처음에는 모든 방이 비어 있으며 스카피는 다음과 같은 규칙에 따라 고객에게 방을 배정하…","fields":{"slug":"/algorithm/20200507-알고리즘/"},"frontmatter":{"date":"May 07, 2020","title":"20200507 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 방문 길이 문제링크: https://programmers.co.kr/learn/courses/30/lessons/49994 Solution 2. 기지국 설치 N개의 아파트가 일렬로 쭉 늘어서 있습니다. 이 중에서 일부 아파트 옥상에는 4g 기지국이 설치되어 있습니다. 기술이 발전해 5g 수요가 높아져 4g 기지국을 5g 기지국으로 바꾸려 합니다. 그…","fields":{"slug":"/algorithm/20200506-알고리즘/"},"frontmatter":{"date":"May 07, 2020","title":"20200506 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 숫자게임 xx 회사의 2xN명의 사원들은 N명씩 두 팀으로 나눠 숫자 게임을 하려고 합니다. 두 개의 팀을 각각 A팀과 B팀이라고 하겠습니다. 숫자 게임의 규칙은 다음과 같습니다. 먼저 모든 사원이 무작위로 자연수를 하나씩 부여받습니다. 각 사원은 딱 한 번씩 경기를 합니다. 각 경기당 A팀에서 한 사원이, B팀에서 한 사원이 나와 서로의 수를 공개…","fields":{"slug":"/algorithm/20200505-알고리즘/"},"frontmatter":{"date":"May 05, 2020","title":"20200505 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 무지의 먹방 라이브 평소 식욕이 왕성한 무지는 자신의 재능을 뽐내고 싶어 졌고 고민 끝에 카카오 TV 라이브로 방송을 하기로 마음먹었다. 그냥 먹방을 하면 다른 방송과 차별성이 없기 때문에 무지는 아래와 같이 독특한 방식을 생각해냈다. 회전판에 먹어야 할 N 개의 음식이 있다.\n각 음식에는 1부터 N 까지 번호가 붙어있으며, 각 음식을 섭취하는데 일…","fields":{"slug":"/algorithm/20200504-알고리즘/"},"frontmatter":{"date":"May 04, 2020","title":"20200504 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"https://poiemaweb.com/js-execution-context 를 공부하고 정리한 글 1. 실행 컨텍스트란? 실행 가능한 코드를 형상화하고 구분하는 추상적인 개념. 즉, 실행 컨텍스트는 실행 가능한 코드가 실행되기 위해 필요한 환경 이라고 말할 수 있다. 여기서 실행 가능한 코드는 아래 3가지가 있다. 전역 코드: 전역 영역에 존재하는 코드…","fields":{"slug":"/javascript/the-execution-context-(js)/"},"frontmatter":{"date":"May 04, 2020","title":"The Execution Context (JS)","category":"javascript"}}},{"node":{"excerpt":"불량 사용자 개발팀 내에서 이벤트 개발을 담당하고 있는 무지는 최근 진행된 카카오이모티콘 이벤트에 비정상적인 방법으로 당첨을 시도한 응모자들을 발견하였습니다. 이런 응모자들을 따로 모아 라는 이름으로 목록을 만들어서 당첨 처리 시 제외하도록 이벤트 당첨자 담당자인 프로도 에게 전달하려고 합니다. 이 때 개인정보 보호을 위해 사용자 아이디 중 일부 문자를 …","fields":{"slug":"/algorithm/20200502-알고리즘/"},"frontmatter":{"date":"May 02, 2020","title":"20200502 알고리즘","category":"algorithm"}}},{"node":{"excerpt":",  ,  의 차이점을 알아보자..! 1. scope 는  이고 , 는  이다. Var 변수의 범위와,  범위 모두  예시1 예시1 에서는 가  이기 때문에 loop가 끝난 후 를 호출하면  출력이 잘 된다. 예시2 예시2 에서는  밖에서 호출해서 에러가 뜬다. 위와 같은 방법을 이용해서.. 예전에는 이렇게 변수 관리를 했다고 한다. 즉시 실행 함수를 이…","fields":{"slug":"/javascript/javascript-var,-let,-const/"},"frontmatter":{"date":"April 30, 2020","title":"Javascript var, let, const","category":"javascript"}}},{"node":{"excerpt":"Equality 연산자  와   는 equality 연산자 이 연산자를 사용하면 연산이 되기 전에 피연산자들을 먼저 비교할 수 있는 형태로 변환 시킨다. 참고  와 의 차이는 값의 할당에 있다. 는 변수는 선언되었지만, 값이 할당되지 않은 것이고, 은 값이 명시적으 변수에 할당된 상태이다. Identity 연산자  와  는 identity 연산자 equa…","fields":{"slug":"/javascript/javascript-동치연산자/"},"frontmatter":{"date":"April 30, 2020","title":"Javascript 동치연산자","category":"javascript"}}},{"node":{"excerpt":"1. 기능개발 프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다. 또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다. 먼저 배포되어야 하는 순서대로 작업의 진도가 적…","fields":{"slug":"/algorithm/20200430-알고리즘/"},"frontmatter":{"date":"April 30, 2020","title":"20200430 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 단어변환 문제 설명 두 개의 단어 begin, target과 단어의 집합 words가 있습니다. 아래와 같은 규칙을 이용하여 begin에서 target으로 변환하는 가장 짧은 변환 과정을 찾으려고 합니다. 예를 들어 begin이 hit, target가 cog, words가 hot,dot,dog,lot,log,cog라면 hit -> hot -> dot…","fields":{"slug":"/algorithm/20200428-알고리즘/"},"frontmatter":{"date":"April 28, 2020","title":"20200428 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 점프와 순간이동 OO 연구소는 한 번에 K 칸을 앞으로 점프하거나, (현재까지 온 거리) x 2 에 해당하는 위치로 순간이동을 할 수 있는 특수한 기능을 가진 아이언 슈트를 개발하여 판매하고 있습니다. 이 아이언 슈트는 건전지로 작동되는데, 순간이동을 하면 건전지 사용량이 줄지 않지만, 앞으로 K 칸을 점프하면 K 만큼의 건전지 사용량이 듭니다. 그…","fields":{"slug":"/algorithm/20200423-알고리즘/"},"frontmatter":{"date":"April 24, 2020","title":"20200423 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 매칭점수 프렌즈 대학교 조교였던 제이지는 허드렛일만 시키는 네오 학과장님의 마수에서 벗어나, 카카오에 입사하게 되었다.\n평소에 관심있어하던 검색에 마침 결원이 발생하여, 검색개발팀에 편입될 수 있었고, 대망의 첫 프로젝트를 맡게 되었다.\n그 프로젝트는 검색어에 가장 잘 맞는 웹페이지를 보여주기 위해 아래와 같은 규칙으로 검색어에 대한 웹페이지의 매칭…","fields":{"slug":"/algorithm/20200422-알고리즘/"},"frontmatter":{"date":"April 23, 2020","title":"20200422 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 방금그곡 라디오를 자주 듣는 네오는 라디오에서 방금 나왔던 음악이 무슨 음악인지 궁금해질 때가 많다. 그럴 때 네오는 다음 포털의 ‘방금그곡’ 서비스를 이용하곤 한다. 방금그곡에서는 TV, 라디오 등에서 나온 음악에 관해 제목 등의 정보를 제공하는 서비스이다. 네오는 자신이 기억한 멜로디를 가지고 방금그곡을 이용해 음악을 찾는다. 그런데 라디오 방송…","fields":{"slug":"/algorithm/20200421-알고리즘/"},"frontmatter":{"date":"April 22, 2020","title":"20200421 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"객체는 Key - Value Collection 이며, 삽입 순서도 기억한다. 어떠한 자료형(객체, 원시값)도 Key나 Value로 올 수 있다. 개발하다 알게된 것 Typescript 에서 Map 자료구조의 타입은 로 표현 가능하다. 선언  를 원소로 갖는 이터러블을 인자로 받는다. 각 값들은 삽입 순서대로 Map 객체에 추가된다. new Map() v…","fields":{"slug":"/javascript/map---javascript/"},"frontmatter":{"date":"April 21, 2020","title":"Map - Javascript","category":"javascript"}}},{"node":{"excerpt":"객체는 자료형에 관계 없이 원시값 ( 객체도, 메소드도 아닌 값 ) 과 객체 참조 모두 유일한 값을 저장 할 때 사용한다. 선언 이터러블이 인자로 전달되면 그 원소 값들이 모두 Set에 추가된다. 을 전달하면 비어있게 된다. 설명  객체는 값 컬렉션으로, 삽입 순서대로 요소를 순회할 수 있다. 하나의  에서 모든 원소들은 유일하다. Set내에서 몇가지 유…","fields":{"slug":"/javascript/set---javascript/"},"frontmatter":{"date":"April 21, 2020","title":"Set - JavaScript","category":"javascript"}}},{"node":{"excerpt":"1. 실패율 슈퍼 게임 개발자 오렐리는 큰 고민에 빠졌다. 그녀가 만든 프랜즈 오천성이 대성공을 거뒀지만, 요즘 신규 사용자의 수가 급감한 것이다. 원인은 신규 사용자와 기존 사용자 사이에 스테이지 차이가 너무 큰 것이 문제였다. 이 문제를 어떻게 할까 고민 한 그녀는 동적으로 게임 시간을 늘려서 난이도를 조절하기로 했다. 역시 슈퍼 개발자라 대부분의 로…","fields":{"slug":"/algorithm/20200420-알고리즘/"},"frontmatter":{"date":"April 21, 2020","title":"20200420 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 정의   메소드는 배열의 요소를 정렬 할 때 사용. 기본 정렬 순서는 유니코드 코드 포인트 를 기준으로 한다. 유니코드를 기준으로 정렬하기 때문에 숫자 배열에서 주의해야 한다. 정렬되는 과정에서 숫자는 문자열로 변환되기 때문에 10은 3보다 유니코드 기준으로 앞에 있다. 따라서 배열의 앞쪽 원소에 배치된다. 참고로  함수는 원본배열을 수정한다. 복사…","fields":{"slug":"/javascript/array.prototype.sort/"},"frontmatter":{"date":"April 17, 2020","title":"Array.prototype.sort","category":"javascript"}}},{"node":{"excerpt":"1. 후보키 프렌즈대학교 컴퓨터공학과 조교인 제이지는 네오 학과장님의 지시로, 학생들의 인적사항을 정리하는 업무를 담당하게 되었다. 그의 학부 시절 프로그래밍 경험을 되살려, 모든 인적사항을 데이터베이스에 넣기로 하였고, 이를 위해 정리를 하던 중에 후보키(Candidate Key)에 대한 고민이 필요하게 되었다. 후보키에 대한 내용이 잘 기억나지 않던 …","fields":{"slug":"/algorithm/20200415-알고리즘/"},"frontmatter":{"date":"April 15, 2020","title":"20200415 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 오픈채팅방 카카오톡 오픈채팅방에서는 친구가 아닌 사람들과 대화를 할 수 있는데, 본래 닉네임이 아닌 가상의 닉네임을 사용하여 채팅방에 들어갈 수 있다. 신입사원인 김크루는 카카오톡 오픈 채팅방을 개설한 사람을 위해, 다양한 사람들이 들어오고, 나가는 것을 지켜볼 수 있는 관리자창을 만들기로 했다. 채팅방에 누군가 들어오면 다음 메시지가 출력된다. 닉…","fields":{"slug":"/algorithm/20200414-알고리즘/"},"frontmatter":{"date":"April 14, 2020","title":"20200414 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. JadenCase 문자열 만들기 문제 설명 JadenCase란 모든 단어의 첫 문자가 대문자이고, 그 외의 알파벳은 소문자인 문자열입니다. 문자열 s가 주어졌을 때, s를 JadenCase로 바꾼 문자열을 리턴하는 함수, solution을 완성해주세요. 제한 조건 s는 길이 1 이상인 문자열입니다. s는 알파벳과 공백문자(” “)로 이루어져 있습니다…","fields":{"slug":"/algorithm/20200412-알고리즘/"},"frontmatter":{"date":"April 12, 2020","title":"20200412 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. Valid Parentheses 괄호 쌍 맞추기 strict version Solution1 Solution2 2. 전화번호 목록 문제 설명 전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.\n전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다. 구조대 : 119 박준영 : 9…","fields":{"slug":"/algorithm/20200409-알고리즘/"},"frontmatter":{"date":"April 09, 2020","title":"20200409 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 두 수의 합 정수를 담은 배열과 목표 값이 주어질 때 더해서 목표값이 되는 index를 리턴하는 문제 (중복x) Solution Brute force는 시간복잡도가 높다 => 이 문제의 경우 hash로 n 만에 해결 가능 2. Reverse Integer -2^31 <= integer <= 2^31-1 Solution 3. Palindrome Num…","fields":{"slug":"/algorithm/20200408-알고리즘/"},"frontmatter":{"date":"April 08, 2020","title":"20200408 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 주식가격 문제 설명 초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요. 제한사항 prices의 각 가격은 1 이상 10,000 이하인 자연수입니다. prices의 길이는 2 이상 100,000 이하입니다. 입출력 예 prices …","fields":{"slug":"/algorithm/20200407-알고리즘/"},"frontmatter":{"date":"April 07, 2020","title":"20200407 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 괄호 변환 ( 카카오 공채 in 프로그래머스 ) 문제 설명 카카오에 신입 개발자로 입사한 콘은 선배 개발자로부터 개발역량 강화를 위해 다른 개발자가 작성한 소스 코드를 분석하여 문제점을 발견하고 수정하라는 업무 과제를 받았습니다. 소스를 컴파일하여 로그를 보니 대부분 소스 코드 내 작성된 괄호가 개수는 맞지만 짝이 맞지 않은 형태로 작성되어 오류가 …","fields":{"slug":"/algorithm/20200406-알고리즘/"},"frontmatter":{"date":"April 06, 2020","title":"20200406 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 징검다리 문제 설명 출처: https://programmers.co.kr/learn/courses/30/lessons/64062 본 문제는 정확성과 효율성 테스트 각각 점수가 있는 문제입니다. 카카오 초등학교의 니니즈 친구들이 라이언 선생님과 함께 가을 소풍을 가는 중에 징검다리가 있는 개울을 만나서 건너편으로 건너려고 합니다. 라이언 선생님은 니니…","fields":{"slug":"/algorithm/20200405-알고리즘/"},"frontmatter":{"date":"April 05, 2020","title":"20200405 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 예산 문제 설명 국가의 역할 중 하나는 여러 지방의 예산요청을 심사하여 국가의 예산을 분배하는 것입니다. 국가예산의 총액은 미리 정해져 있어서 모든 예산요청을 배정해 주기는 어려울 수도 있습니다. 그래서 정해진 총액 이하에서 가능한 한 최대의 총 예산을 다음과 같은 방법으로 배정합니다. 예를 들어, 전체 국가예산이 485이고 4개 지방의 예산요청이 …","fields":{"slug":"/algorithm/20200403-알고리즘/"},"frontmatter":{"date":"April 04, 2020","title":"20200403 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 코니와 브라운 문제 연인 코니와 브라운은 광활한 들판에서 ‘나 잡아 봐라’ 게임을 한다. 이 게임은 브라운이 코니를 잡거나, 코니가 너무 멀리 달아나면 끝난다. 게임이 끝나는데 걸리는 최소 시간을 구하시오. 조건 코니는 처음 위치 C에서 1초 후 1만큼 움직이고, 이후에는 가속이 붙어 매 초마다 이전 이동 거리 + 1만큼 움직인다. 즉 시간에 따른 …","fields":{"slug":"/algorithm/20200401-알고리즘/"},"frontmatter":{"date":"April 04, 2020","title":"20200401 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 비밀지도 출처: https://programmers.co.kr/learn/courses/30/lessons/17681 Solution  내장 함수를 이용하여 2진수를 구할 수 도 있다.  2. 카펫 문제 설명 Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 빨간색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다.…","fields":{"slug":"/algorithm/20200404-알고리즘/"},"frontmatter":{"date":"April 04, 2020","title":"20200404 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 튜플 문제 설명 셀수있는 수량의 순서있는 열거 또는 어떤 순서를 따르는 요소들의 모음을 튜플(tuple)이라고 합니다. n개의 요소를 가진 튜플을 n-튜플(n-tuple)이라고 하며, 다음과 같이 표현할 수 있습니다. (a1, a2, a3, …, an) 튜플은 다음과 같은 성질을 가지고 있습니다. 중복된 원소가 있을 수 있습니다. ex : (2, 3…","fields":{"slug":"/algorithm/20200402-알고리즘/"},"frontmatter":{"date":"April 04, 2020","title":"20200402 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 섬나라 아일랜드 섬나라 아일랜드의 지도가 격자판의 정보로 주어집니다. 각 섬은 1로 표시되어 상하좌우와 대 각선으로 연결되어 있으며, 0은 바다입니다. 섬나라 아일랜드에 몇 개의 섬이 있는지 구하는 프로그램을 작성하세요. image 만약 위와 같다면 ▣ 입력설명\n 첫 번째 줄에 자연수 N(1<=N<=20)이 주어집니다. 두 번째 줄부터 격자판 정보가…","fields":{"slug":"/algorithm/20200326-알고리즘/"},"frontmatter":{"date":"March 27, 2020","title":"20200326 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"Egoing Lee 님의 inflearn - Javascript Immutability 강의를 듣고 정리 1 . Immutability 데이터의 원본을 훼손 하고싶지 않음!!!!!!!!!!!!!!!!!!!!!!!!! 2.  이름에 대한 불변함  vs  3.  JS data type Primitive Object Number Object String Arr…","fields":{"slug":"/javascript/javascript-immutability/"},"frontmatter":{"date":"March 26, 2020","title":"javascript immutability","category":"javascript"}}},{"node":{"excerpt":"1. 미로탐색 자연수 N이 주어지면 7*7 격자판 미로를 탈출하는 최단경로의 경로수를 출력하는 프로그램을 작성하세요. 경로수는 출발점에서 도착점까지 가는데 이동한 횟수를 의미한다. 출발점은 격자 의 (1, 1) 좌표이고, 탈출 도착점은 (7, 7)좌표이다. 격자판의 1은 벽이고, 0은 도로이다. 격자판의 움직임은 상하좌우로만 움직인다. 미로가 다음과 같다…","fields":{"slug":"/algorithm/20200325-알고리즘/"},"frontmatter":{"date":"March 25, 2020","title":"20200325 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"로드 밸런서 종류와 동작방식 왜 필요할까? 서버에 대용량 트래픽이 발생하면 이를 해결하기 위한 방법은 장비를 업그레이드 하는 방법(Scale-up)과 여러대의 장비르 두는 방법(Scale-out)이 있다. 만약 Scale-out 방식으로 여러대의 서버를 둔다면 ? image 해당 서비스에 접근하기 위해서는 여러 IP가 필요하다 여러 IP를 둔다면 사용자마…","fields":{"slug":"/playground/로드밸런서-훑어보기/"},"frontmatter":{"date":"March 24, 2020","title":"로드밸런서(load balancer) 훑어보기","category":"playground"}}},{"node":{"excerpt":"NAT 기초 이게 뭐지? Network Address Translation 의 약자, 말 그대로 네트워크 주소 변환이다. NAT는 외부 네트워크에 알려진 것과 다른 IP 주소를 사용하는 내부 네트워크에서 IP주소를 변환하는 것 그럼 왜 NAT(주소변환)를 해야 할까..? 공인 IP ( Public IP )가 부족하기 때문이다. 만약 전세계 사람들이 집집마…","fields":{"slug":"/cs/nat-기초/"},"frontmatter":{"date":"March 24, 2020","title":"NAT 기초","category":"cs"}}},{"node":{"excerpt":"1. 송아지 찾기 현수는 송아지를 잃어버렸다. 다행히 송아지에는 위치추적기가 달려 있다. 현수의 위치와 송아 지의 위치가 직선상의 좌표 점으로 주어지면 현수는 현재 위치에서 송아지의 위치까지 다음과 같은 방법으로 이동한다.\n 현수는 스카이 콩콩을 타고 가는데 한 번의 점프로 앞으로 1, 뒤로 1, 앞으로 5를 이동할 수 있다. 최소 몇 번의 점프로 현수가…","fields":{"slug":"/algorithm/20200323-알고리즘/"},"frontmatter":{"date":"March 24, 2020","title":"20200323 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 휴가 카운셀러로 일하고 있는 현수는 오늘부터 N+1일째 되는 날 휴가를 가기 위해서, 남은 N일 동 안 최대한 많은 상담을 해서 휴가비를 넉넉히 만들어 휴가를 떠나려 한다.\n 현수가 다니는 회사에 하루에 하나씩 서로 다른 사람의 상담이 예약되어 있다.\n 각각의 상담은 상담을 완료하는데 걸리는 날수 T와 상담을 했을 때 받을 수 있는 금액 P로 이 루…","fields":{"slug":"/algorithm/20200320-알고리즘/"},"frontmatter":{"date":"March 21, 2020","title":"20200320 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 수들의 조합 N개의 정수가 주어지면 그 숫자들 중 K개를 뽑는 조합의 합이 임의의 정수 M의 배수인 개수 는 몇 개가 있는지 출력하는 프로그램을 작성하세요.\n 예를 들면 5개의 숫자 2 4 5 8 12가 주어지고, 3개를 뽑은 조합의 합이 6의 배수인 조합을 찾으면 4+8+12 2+4+12로 2가지가 있습니다. ▣ 입력설명\n 첫줄에 정수의 개수 N(…","fields":{"slug":"/algorithm/20200319-알고리즘/"},"frontmatter":{"date":"March 21, 2020","title":"20200319 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 중복순열 구하기 1부터 N까지 번호가 적힌 구슬이 있습니다. 이 중 중복을 허락하여 M번을 뽑아 일렬로 나열 하는 방법을 모두 출력합니다. ▣ 입력설명\n 첫 번째 줄에 자연수 N(3<=N<=10)과 M(3<=M<=N) 이 주어집니다. ▣ 출력설명\n 첫 번째 줄에 결과를 출력합니다. 맨 마지막 총 경우의 수를 출력합니다. 출력순서는 사전순으로 오름차순…","fields":{"slug":"/algorithm/20200318-알고리즘/"},"frontmatter":{"date":"March 18, 2020","title":"20200318 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 이진트리 순회 아래 그림과 같은 이진트리를 전위순회와 후위순회를 연습해보세요. image 전위순회 출력 : 1 2 4 5 3 6 7  중위순회 출력 : 4 2 5 1 6 3 7  후위순회 출력 : 4 5 2 6 7 3 1 Solution 함수가 스택에 쌓이고 빠지는 과정을 잘 생각 해보자! 2. 부분집합 구하기 자연수 N이 주어지면 1부터 N까지의 …","fields":{"slug":"/algorithm/20200316-알고리즘/"},"frontmatter":{"date":"March 17, 2020","title":"20200316 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"Redis 훑어 보기 인트로 Redis 는 Remote Dictionary Server의 약자. Redis는 key-value 형식의 Map 데이터 저장소. (NoSQL) 인터넷 통신의 80%가 불과 20%의 사이트에 대한 엑세스로 추정되며, 이  20%의 웹 사이트 데이터를 캐시해두면 효율을 극적으로 향상 가능 ( 파레토의 법칙 ) -> Redis는 캐…","fields":{"slug":"/playground/redis-훑어보기/"},"frontmatter":{"date":"March 16, 2020","title":"레디스(Redis) 훑어보기","category":"playground"}}},{"node":{"excerpt":"1. Anagram ( by dict ) Anagram이란 두 문자열이 알파벳의 나열 순서를 다르지만 그 구성이 일치하면 두 단어는 아 나그램이라고 합니다.\n 예를 들면 AbaAeCe 와 baeeACA 는 알파벳을 나열 순서는 다르지만 그 구성을 살펴보면 A(2), a(1), b(1), C(1), e(2)로 알파벳과 그 개수가 모두 일치합니다. 즉 어느 …","fields":{"slug":"/algorithm/20200308-알고리즘/"},"frontmatter":{"date":"March 10, 2020","title":"20200308 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"힙( Heap ) 우선 순위 큐를 위하여 만들어진 자료구조. 우선순위 큐? 우선순위의 개념을 큐에 도입한 자료 구조 자료구조 삭제되는 요소 스택(Stack) 가장 최근에 들어온 요소 큐(Queue) 가장 먼저 들어온 요소 우선순위 큐(Priority Queue) 가장 우선순위가 높은 데이터 우선순위 큐의 이용 사례 a. 네트워크 트레픽 제어 b. 시뮬레이…","fields":{"slug":"/cs/heap/"},"frontmatter":{"date":"March 09, 2020","title":"heap","category":"cs"}}},{"node":{"excerpt":"1. 후위식 연산 후위연산식이 주어지면 연산한 결과를 출력하는 프로그램을 작성하세요.\n 만약 3(5+2)-9 을 후위연산식으로 표현하면 352+9- 로 표현되며 그 결과는 21입니다. ▣ 입력설명\n 첫 줄에 후위연산식이 주어집니다. 연산식의 길이는 50을 넘지 않습니다. 식은 1~9의 숫자와 +, -, *, /, (, ) 연산자로만 이루어진다. ▣ 출력설…","fields":{"slug":"/algorithm/20200307-알고리즘/"},"frontmatter":{"date":"March 08, 2020","title":"20200307 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 증가수열 만들기 1부터 N까지의 자연수로 구성된 길이 N의 수열이 주어집니다.\n 이 수열의 왼쪽 맨 끝 숫자 또는 오른쪽 맨 끝 숫자 중 하나를 가져와 나열하여 가장 긴 증가수열 을 만듭니다.\n 예를 들어 2 4 5 1 3 이 주어지면 만들 수 있는 가장 긴 증가수열의 길이는 4입니다.\n 맨 처음 왼쪽 끝에서 2를 가져오고, 그 다음 오른쪽 끝에서 …","fields":{"slug":"/algorithm/20200306-알고리즘/"},"frontmatter":{"date":"March 08, 2020","title":"20200306 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 마구간 정하기 N개의 마구간이 수직선상에 있습니다. 각 마구간은 x1, x2, x3, …, xN의 좌표를 가지며, 마 구간간에 좌표가 중복되는 일은 없습니다.\n 현수는 C마리의 말을 가지고 있는데, 이 말들은 서로 가까이 있는 것을 좋아하지 않습니다. 각 마구간에는 한 마리의 말만 넣을 수 있고, 가장 가까운 두 말의 거리가 최대가 되게 말을 마구간…","fields":{"slug":"/algorithm/20200305-알고리즘/"},"frontmatter":{"date":"March 07, 2020","title":"20200305 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 스토쿠 검사 스도쿠는 매우 간단한 숫자 퍼즐이다. 9×9 크기의 보드가 있을 때, 각 행과 각 열, 그리고 9 개의 3×3 크기의 보드에 1부터 9까지의 숫자가 중복 없이 나타나도록 보드를 채우면 된다. 예를 들어 다음을 보자. image 위 그림은 스도쿠를 정확하게 푼 경우이다. 각 행에 1부터 9까지의 숫자가 중복 없이 나오 고, 각 열에 1부터…","fields":{"slug":"/algorithm/20200303-알고리즘/"},"frontmatter":{"date":"March 06, 2020","title":"20200303 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"탐색 이진탐색( Binary Search ) 알고리즘 이진탐색 (binary search) 시간복잡도  정렬된 자료를 반으로 나누어 탐색 단, 자료는  으로 정렬된 자료여야 한다. 퍼포먼스가 좋다 핵심 변수  : 리스트의 첫번째 원소 idx  : 리스트의 마지막 원소 idx  : (start + end) // 2 Big-O K번 실행시 남은 자료의 개수는…","fields":{"slug":"/cs/이진-탐색/"},"frontmatter":{"date":"March 05, 2020","title":"Binary Search","category":"cs"}}},{"node":{"excerpt":"1. 문자열 내 마음대로 정렬하기 출처: 프로그래머스 문제 설명 문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다. 예를 들어 strings가 sun, bed, car이고 n이 1이면 각 단어의 인덱스 1의 문자 u, e, a로 strings를 정렬합니다. 제한 조건 st…","fields":{"slug":"/algorithm/20200302-알고리즘/"},"frontmatter":{"date":"March 03, 2020","title":"20200302 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. 회문 문자열 검사 N개의 문자열 데이터를 입력받아 앞에서 읽을 때나 뒤에서 읽을 때나 같은 경우(회문 문자열) 이면 YES를 출력하고 회문 문자열이 아니면 NO를 출력하는 프로그램을 작성한다.\n 단 회문을 검사할 때 대소문자를 구분하지 않습니다. ▣ 입력설명\n 첫 줄에 정수 N(1<=N<=20)이 주어지고, 그 다음 줄부터 N개의 단어가 입력된다. …","fields":{"slug":"/algorithm/20200229-알고리즘/"},"frontmatter":{"date":"March 02, 2020","title":"20200229 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1.  자릿수의 합 N개의 자연수가 입력되면 각 자연수의 자릿수의 합을 구하고, 그 합이 최대인 자연수를 출력 하는 프로그램을 작성하세요. 각 자연수의 자릿수의 합을 구하는 함수를 def digit_sum(x)를 꼭 작성해서 프로그래밍 하세요. ▣ 입력설명\n 첫 줄에 자연수의 개수 N(3<=N<=100)이 주어지고, 그 다음 줄에 N개의 자연수가 주어진다…","fields":{"slug":"/algorithm/20200228-알고리즘/"},"frontmatter":{"date":"March 01, 2020","title":"20200228 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"1. K번째 약수 어떤 자연수 p와 q가 있을 때, 만일 p를 q로 나누었을 때 나머지가 0이면 q는 p의 약수이다. 6을 예로 들면 6÷1=6…0 6÷2=3…0 6÷3=2…0 6÷4=1…2 6÷5=1…1 6÷6=1…0 그래서 6의 약수는 1, 2, 3, 6, 총 네 개이다.\n 두 개의 자연수 N과 K가 주어졌을 때, N의 약수들 중 K번째로 작은 수를 …","fields":{"slug":"/algorithm/20200227-알고리즘/"},"frontmatter":{"date":"March 01, 2020","title":"20200227 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 문제 설명 1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요. 소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.\n(1은 소수가 아닙니다.) 제한 조건 n은 2이상 1000000이하의 자연수입니다. 입출력 예 n result 10 4 5 3 입출력 예 설명 입출력…","fields":{"slug":"/algorithm/20200226-알고리즘/"},"frontmatter":{"date":"February 26, 2020","title":"20200226 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"출처 : 프로그래머스 1 ) Question 문제 설명 수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다. 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, …\n2번 수포자가 찍는 방식: 2, 1, 2, 3, 2…","fields":{"slug":"/algorithm/20200225-알고리즘/"},"frontmatter":{"date":"February 25, 2020","title":"20200225 알고리즘","category":"algorithm"}}},{"node":{"excerpt":"오늘은 알고리즘 공부 다시 할겸 JS로 큐, 스택 구현을 해보았다. 문제도 풀고.. Queue Stack Stack으로 Queue 구현 Stack으로 10 -> 2진수","fields":{"slug":"/playground/2020-02-24/"},"frontmatter":{"date":"February 24, 2020","title":"2020 02 24","category":"playground"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 문제 설명 수평 직선에 탑 N대를 세웠습니다. 모든 탑의 꼭대기에는 신호를 송/수신하는 장치를 설치했습니다. 발사한 신호는 신호를 보낸 탑보다 높은 탑에서만 수신합니다. 또한, 한 번 수신된 신호는 다른 탑으로 송신되지 않습니다. 예를 들어 높이가 6, 9, 5, 7, 4인 다섯 탑이 왼쪽으로 동시에 레이저 신호를 발…","fields":{"slug":"/algorithm/20200127---탑/"},"frontmatter":{"date":"January 27, 2020","title":"20200127 - 탑","category":"algorithm"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 문제 설명 트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.\n※ 트럭이 다리에 완전히 오르지 않은 경우, 이…","fields":{"slug":"/algorithm/20200126---다리를-지나는-트럭/"},"frontmatter":{"date":"January 26, 2020","title":"20200126 - 다리를 지나는 트럭","category":"algorithm"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 문제 설명 여러 개의 쇠막대기를 레이저로 절단하려고 합니다. 효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자릅니다. 쇠막대기와 레이저의 배치는 다음 조건을 만족합니다. 아래 그림은 위 조건을 만족하는 예를 보여줍니다. 수평으로 그려진 굵은 실선은 쇠막대기이…","fields":{"slug":"/algorithm/20200126---쇠-막대기/"},"frontmatter":{"date":"January 26, 2020","title":"20200126 - 쇠 막대기","category":"algorithm"}}},{"node":{"excerpt":"알고리즘을 풀다가 내가 몰랐던 함수들에 대해 알게 되었다. 정리하자! some 배열 요소에서 하나라도 특정 조건을 만족하는지 알아볼 때 유용한 메소드이다. 다른 배열 메소드와 비슷하게 요소들에  함수들을 적용시켜 하나라도 를 반환하면 함수를 즉시 중단한다. 만약 모든 요소를 순회 했는데 를 반환 하지 않았다면 를 반환한다.  함수의 파라미터로 전달되는 값…","fields":{"slug":"/javascript/javascript-some,-every-함수/"},"frontmatter":{"date":"January 26, 2020","title":"javascript some, every 함수","category":"javascript"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 문제 설명 일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다. 그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다. 이런 문제를 보완하기 위해 중요도가 높은 문서를 먼저 인쇄하는 프린터를 개발했습니다. 이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다. 예를 들어, 4개의 문서(A, B…","fields":{"slug":"/algorithm/20200126---프린터/"},"frontmatter":{"date":"January 26, 2020","title":"20200126 - 프린터","category":"algorithm"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 문제 설명 H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과1에 따르면, H-Index는 다음과 같이 구합니다. 어떤 과학자가 발표한 논문 편 중, 번 이상 인용된 논문이 편 이상이고 나머지 논문이 h번 이하 인용되었다면 가 이…","fields":{"slug":"/algorithm/20200126---h-index/"},"frontmatter":{"date":"January 26, 2020","title":"20200126 - H Index","category":"algorithm"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 가장 큰 수 0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요. 예를 들어, 주어진 정수가 6, 10, 2라면 6102, 6210, 1062, 1026, 2610, 2106를 만들 수 있고, 이중 가장 큰 수는 6210입니다. 0 또는 양의 정수가 담긴 배열 numbers…","fields":{"slug":"/algorithm/20200124---가장-큰-수/"},"frontmatter":{"date":"January 24, 2020","title":"20200124 - 가장 큰 수","category":"algorithm"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 문제 설명 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다. 예를 들어 array가 1, 5, 2, 6, 3, 7, 4, i = 2, j = 5, k = 3이라면 array의 2번째부터 5번째까지 자르면 5, 2, 6, 3입니다. 1에서 나온 배열을 정렬하면 2…","fields":{"slug":"/algorithm/20200124---k번째-수/"},"frontmatter":{"date":"January 24, 2020","title":"20200124 - K번째 수","category":"algorithm"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 문제 설명 수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다. 마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solut…","fields":{"slug":"/algorithm/20200124---마라톤-경주/"},"frontmatter":{"date":"January 24, 2020","title":"20200124 - 마라톤 경주","category":"algorithm"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 문제 설명 스트리밍 사이트에서 장르 별로 가장 많이 재생된 노래를 두 개씩 모아 베스트 앨범을 출시하려 합니다. 노래는 고유 번호로 구분하며, 노래를 수록하는 기준은 다음과 같습니다. 속한 노래가 많이 재생된 장르를 먼저 수록합니다. 장르 내에서 많이 재생된 노래를 먼저 수록합니다. 장르 내에서 재생 횟수가 같은 노래…","fields":{"slug":"/algorithm/20200124---베스트앨범/"},"frontmatter":{"date":"January 24, 2020","title":"20200124 - 베스트앨범","category":"algorithm"}}},{"node":{"excerpt":"출처 : 프로그래머스 Question 문제 설명 직사각형 종이를 n번 접으려고 합니다. 이때, 항상 오른쪽 절반을 왼쪽으로 접어 나갑니다. 다음은 n = 2인 경우의 예시입니다. image 먼저 오른쪽 절반을 왼쪽으로 접습니다. image 다시 오른쪽 절반을 왼쪽으로 접습니다. image 종이를 모두 접은 후에는 종이를 전부 펼칩니다. 종이를 펼칠 때는 …","fields":{"slug":"/algorithm/20200124---종이접기/"},"frontmatter":{"date":"January 24, 2020","title":"20200124 - 종이접기","category":"algorithm"}}},{"node":{"excerpt":"지연평가 + Promise 1. L.map, map, take 이 코드에서 go 함수의 첫번째 인자가 Promise라면? 보이는 결과 같이 코드가 제대로 동작하지 않는다. Promise도 처리할 수 있게 코드를 수정 해 보자! 기존에 작성했던 L.map함수를 먼저 보겠다. 여기서 a 값이 Pormise인 경우 인데 이전 포스트에서 작성했던 go1함수를 이…","fields":{"slug":"/FP/지연성+promise(map)/"},"frontmatter":{"date":"December 26, 2019","title":"지연성+Promise(map)","category":"FP"}}},{"node":{"excerpt":"Linked List 1. 설명 linked list는 노드들이 링크된 data structure 따라서 기본적으로 노드들이 정의된 data structure를 정의 해줘야 한다. Node 클래스는 data, next 2개의 멤버를 갖는다. data 멤버는 받은 item을 저장하고 next는 다음 노드를 가리키는 역할을 갖는다. 2. 구현 add cur.…","fields":{"slug":"/cs/linkedlist/"},"frontmatter":{"date":"December 26, 2019","title":"LinkedList","category":"cs"}}},{"node":{"excerpt":"Stack 1. 설명 입력과 출력이 한 방향으로 제한된 자료구조 가장 나중에 들어온 것이 가장 나중에 나옴 ( LIFO ) stack과 queue에는 search가 없다. stack overflow 는 스택이 꽉차서 더이상 데이터를 받지 못하는 상태 stack underflow는 스택이 비어서 꺼낼 데이터가 없는 상태 2. 언제 사용할까? 브라우저의 ba…","fields":{"slug":"/cs/stack/"},"frontmatter":{"date":"December 25, 2019","title":"Stack","category":"cs"}}},{"node":{"excerpt":"큐 1. 설명 입력과 출력을 한쪽 끝으로 제한한 자료구조. 먼저 들어온 원소가 먼저 나가기 때문에 FIFO(First In First Out) 이다. 큐의 가장 첫번째 원소를 front, 가장 끝원소를 rear 라고 한다. 큐는 들어올 때 rear로 들어오지만, 나갈때는 front부터 나가는 특성을 갖는다.  ( 놀이공원 대기줄 생각!! ) 접근 방법은 …","fields":{"slug":"/cs/queue/"},"frontmatter":{"date":"December 24, 2019","title":"Queue","category":"cs"}}},{"node":{"excerpt":"go, pipe, reduce 에서 비동기 제어 1. go 만약 중간에 비동기 상황이 일어난 함수가 실행 된다면 기존에 만들었던 go 함수는 정상적으로 동작하지 않는다.  하지만! 이전 포스트 에서 만들었던 go1 함수처럼 비슷하게 구현이 가능하다. 우선 go함수를 보면 사용된 함수는 reduce 함수 이므로 이를 수정 해 줘야한다.  오랜만에 reduc…","fields":{"slug":"/FP/go,pipe,reduce-비동기제어/"},"frontmatter":{"date":"December 24, 2019","title":"go,pipe,reduce 비동기제어","category":"FP"}}},{"node":{"excerpt":"1. 모나드 ( 개념 이해 ) 함수를 안전하게 합성하기 위한 도구. 자바스크립트 에서는 모나드를 자세하게 설명하지는 않지만, Array나 Promise 같은거로 모나드가 무엇인지는 설명이 가능하다.  모나드는 어떤 박스( Container ) 라고 생각하면 된다. 이 박스에 어떤 값이 들어있다. 이 박스를 이용해서 함수 합성을 안전하게 하는 것이라고 볼 …","fields":{"slug":"/FP/모나드와-promise/"},"frontmatter":{"date":"December 21, 2019","title":"모나드와 Promise","category":"FP"}}},{"node":{"excerpt":"값으로서의 Promise 위 예제에서 go1이 제대로 동작 하려면 f 라는 함수는 동기적으로 동작해야 하는 함수이고, a라는 값도 동기적으로 값을 알 수 있어야 한다. 다른말로는 비동기 상황이 일어난 일급값이 아닌 일반값 즉 프로미스가 아닌 값이어야 한다. 만약 a라는 값이 어떤 상황 이후에 알 수 있는 값이라면? 정상적으로 동작하지 않는다. 여기서 10…","fields":{"slug":"/FP/값으로서의-promise/"},"frontmatter":{"date":"December 21, 2019","title":"값으로서의 Promise","category":"FP"}}},{"node":{"excerpt":"Callback 과 Promise 자바스크립트에서 비동기 동시성 프로그래밍을 하는 방법으로는 크게 Callback과 Promise 가 있다. 1. Callback 선언부 100ms 이후에 받은 인자 a에 10을 더한 값을 콜백 함수에 전달 하였다. 실행부 2. Promise 선언부 프로미스 에서는 함수에서 사용할 인자만 받고 콜백함수 같은건 받지 않는다.…","fields":{"slug":"/FP/callback과-promise/"},"frontmatter":{"date":"December 19, 2019","title":"Callback과 Promise","category":"FP"}}},{"node":{"excerpt":"Bubble Sort 시간복잡도 O(n2), 공간복잡도 O(1) 현재 처리되는 원소와 다음 인덱스의 원소를 비교하여 현재 원소가 더 크면 서로 교체 Selection Sort (worst, best, average ) 시간복잡도 O(n2)  인자로 받은 배열의 첫번째 원소를 minum value로 설정 두번째 원소부터 배열의 끝 까지 반복문을 순회하며 m…","fields":{"slug":"/cs/정렬(1)/"},"frontmatter":{"date":"December 19, 2019","title":"정렬(1)","category":"cs"}}},{"node":{"excerpt":"L.flatMap 1. Array.prototype.flatMap L.flatMap 함수를 구현하기 전에 자바스크립트에 내장된 Array.prototype.flatMap 함수에 대해 알고 지나가 보자. flatMap 함수는 map 함수와 비교하여 생각하며 이해하기 쉽다. map 함수는 array의 각 원소를 파라미터로 전달된 함수의 return 값에 맞게…","fields":{"slug":"/FP/함수형-프로그래밍(l.flatmap)/"},"frontmatter":{"date":"December 16, 2019","title":"함수형 프로그래밍(L.flatMap)","category":"FP"}}},{"node":{"excerpt":"L.flatten L.flatten 함수는 다음과 같은 기능을 갖는다. 위 와 같은 2차원 배열을 depth가 1인 1차원 배열로 펼쳐주는 함수이다.  그럼 구현을 해보자. 먼저 L.flatten 함수는 지연성을 갖기 때문에 제너레이터를 사용하고, 인자로 이터러블을 받는다. 이터러블을 인자로 받아서 for of문을 순회 한다. 만약 순회되는 이터레이터의 …","fields":{"slug":"/FP/함수형-프로그래밍(l.flatten)/"},"frontmatter":{"date":"December 15, 2019","title":"함수형 프로그래밍(L.flatten)","category":"FP"}}},{"node":{"excerpt":"find 함수 이전 포스트에서 queryStr 함수는 reduce를 통해 만들어진 것 처럼 함수들은 어떤 계보, 계열을 통해 만들어진다. 이번에 만들어볼 find 함수는 take 함수를 통해 만들어진다. 하지만 find 함수는 조건을 만족하는 원소 한개만 찾는 함수이다. 따라서 위와 같이 구현할 수 있는데, 위 함수는 효율성에 문제가 있는 코드가 있다. …","fields":{"slug":"/FP/함수형-프로그래밍(find)/"},"frontmatter":{"date":"December 10, 2019","title":"함수형 프로그래밍(find)","category":"FP"}}},{"node":{"excerpt":"L.map 으로 map 만들기 기존의 map 과 L.map 함수이다. map 함수의 단점(?)은 만약 인자로 받은 이터러블의 원소 전체를 맵핑 하지 않고 일부를 맵핑 한다고 해도 for of 문을 끝까지 순회하며 전체 원소가 맵핑된 결과값을 리턴한다는 것 이다. 하지만 결과 값이 값 그 자체이다. ( 예를들면 1, 2, 3, 4, 5 ) L.map 함수의…","fields":{"slug":"/FP/함수형-프로그래밍(l.map->map)/"},"frontmatter":{"date":"December 10, 2019","title":"함수형 프로그래밍(L.map->map)","category":"FP"}}},{"node":{"excerpt":"function 1.  구조 2. 기본 예제 3. 다중 반환 파이썬은 다중반환을 쉽게 가능하다! 다중 반환을 하였으니 받을 때도 다중으로 받자. 팩킹, 언팩킹을 사용한다면? (중요) 4. 언패킹 예제 별 한개 *args 는 여러개의 원소를 튜플로 받는다는 뜻이다. 예를들어 라면 args 는 (1,2,3,4,5) 이고 라면 args는 (1,2,3,) 이다.…","fields":{"slug":"/python/파이썬-기초-정리(함수)/"},"frontmatter":{"date":"December 09, 2019","title":"파이썬 기초 정리(함수)","category":"python"}}},{"node":{"excerpt":"map, filter 계열 함수 vs reduce, take 함수 1.  map, filter map, filter 계열 함수는 이터러블 같은 모나딕한 값의 안쪽에 있는 원소에 함수를 합성 지연성을 갖는다. 2. reduce, take 실제로 값의 계산이 일어나는 함수 지연성을 갖지 않는다. take 같은 함수는 지연성을 줄 수 있지만, 배열을 축약 하는…","fields":{"slug":"/FP/함수형-프로그래밍(querystr,-join)/"},"frontmatter":{"date":"December 09, 2019","title":"함수형 프로그래밍(queryStr, join)","category":"FP"}}},{"node":{"excerpt":"조건문 1. True, False 파이썬에서는 빈 문자열, 리스트, 튜플, 딕셔너리를 False로 취급 ( 자바스크립트랑 다르군. ) 2. 관계 연산자 파이썬에서 사용하는 관계연산자는 >, >=, <, <=, ==, != 가 있다. 3. 논리 연산자 파이썬에서 사용하는 논리연산자는 and, or, not 이 있다. 4. 산술, 관게, 논리 연산자 우선순위…","fields":{"slug":"/python/파이썬-기초-정리(조건문,-반복문)/"},"frontmatter":{"date":"December 08, 2019","title":"파이썬 기초 정리(조건문, 반복문)","category":"python"}}},{"node":{"excerpt":"연속된 제너레이터의 계산 순서를 알아보기 전에 map 함수와 filter 함수도 제너레이터를 이용하여 구현해보자. L.map 기존 map함수와 다른 점은  위와 같이 이터레이터를 생성한 것 만으로는 내가 원하는 값을 구할 수 없고 next() 함수를 호출 한 만큼의 값만 얻을 수 있다. 따라서 array를 직접 생성하지 않기 때문에 내가 원하는 대로 평가…","fields":{"slug":"/FP/함수형-프로그래밍(엄격vs느긋)-(1)/"},"frontmatter":{"date":"December 07, 2019","title":"(중요) 함수형 프로그래밍(연속된 제너레이터)","category":"FP"}}},{"node":{"excerpt":"take 함수와 지연평가 take 함수 take 함수는 파라미터로 받은 length 만큼 이터러블을 자르는 간단한 함수이다. 이전 포스트에서 공부했던 range 함수와 같이 사용한다면, 위와 같은 결과를 얻는다. 다음으로 지연성에 관한 설명을 한다면 만약 range에 무한수열이 들어간다고 생각해보자. range 함수에 위와같이 무한수열이 들어가면 rang…","fields":{"slug":"/FP/함수형-프로그래밍(take,-지연성-평가)/"},"frontmatter":{"date":"December 06, 2019","title":"함수형 프로그래밍(take, 지연성 평가)","category":"FP"}}},{"node":{"excerpt":"인자로 받은 값 만큼 길이를 가지는 range 함수와 L.range 함수(느긋한 range) 구현 1. range 뒤에 구현할 L.range 함수와 차이점을 알아보기 위해 배열 원소들의 총합을 구해보자 2. L.range 제너레이터 함수를 이용해서 i가 증가하는대로 yield를 하게 했다. 원소의 총합을 구해보면 결과는 range 함수와 같다. 3. 차이…","fields":{"slug":"/FP/함수형-프로그래밍(range,-l.range)/"},"frontmatter":{"date":"December 05, 2019","title":"함수형 프로그래밍(range, L.range)","category":"FP"}}},{"node":{"excerpt":"집합 자료형 (Sets) 순서x, 중복x, 추가 삭제 o 선언 선언을 할 때 중복된 원소는 파이선 인터프리터가 자동으로 제거한다. 형 변환 집합 => 튜플 튜플로 형 변환을 하였으니 slice 가능 집합 => 리스트 길이 집합의 활용 ( 사기.. ) 자바스크립트에도 이런거 있으면 좋겠다. 교집합 합집합 차집합 중복되는 원소인 4,5,6을 제거하고 1,2,…","fields":{"slug":"/python/파이썬-기초-정리(자료형-집합)/"},"frontmatter":{"date":"December 04, 2019","title":"파이썬 기초 정리(자료형-집합)","category":"python"}}},{"node":{"excerpt":"Curry 커리함수는 함수를 리턴하는 함수인데, 받아둔 함수를 원하는 시점에 평가하여 값을 리턴하는 기능을 갖는다. 커리 함수는 함수를 리턴 함수를 받아서 원하는 시점에 평가 인자가 2개 이상이면 받아둔 함수를 인자와 함께 즉시 실행 시키고 인자가 2개 미만 이라면 인자를 더 받아 후에 실행 시키는 함수를 리턴한다. curry함수는 다음과 같이 사용된다.…","fields":{"slug":"/FP/함수형-프로그래밍(curry함수)/"},"frontmatter":{"date":"December 03, 2019","title":"함수형 프로그래밍(curry)","category":"FP"}}},{"node":{"excerpt":"go, pipe go 함수형 프로그래밍에서는 코드를 값으로 다루는 아이디어를 많이 사용한다. 코드인 함수를 받아서 평가하는 시점을 원하는대로 다룰 수 있다. 따라서 코드의 표현력, 가독성을 높일 수 있다. 이전 포스트 에서 가격이 2만원 미만인 물건의 총 합을 계산하는 코드로 다음과 같이 작성 하였다. 위와 같이 작성하면 원하는 값을 얻을 수는 있지만 여…","fields":{"slug":"/FP/함수형-프로그래밍(go함수)/"},"frontmatter":{"date":"December 02, 2019","title":"함수형 프로그래밍(go, pipe)","category":"FP"}}},{"node":{"excerpt":"map, filter, reduce 응용 가격들만 뽑아보기 map함수를 이용하여 가격만 뽑았다. 특정 가격 이하의 가격만 뽑기 map함수의 파라미터로 받는 이터러블을 fliter 함수로 축약하여 ( 가격이 2만원 미만  ) 전달 하였다. 특정 가격 이하에 해당하는 물품의 가격을 모두 합치기 위와 같은 기능을 하는 코드로 다음과 같이 작성할수도 있다. 위 …","fields":{"slug":"/FP/함수형-프로그래밍(map,filter,reduce-응용)/"},"frontmatter":{"date":"November 27, 2019","title":"함수형 프로그래밍(map,filter,reduce 응용)","category":"FP"}}},{"node":{"excerpt":"Filter 함수는 이러터블의 원소들에서 특정한 원소들만 걸러내고 싶을 때 사용한다. 1. 구현 위 처럼 이터러블의 원소들에서 특정한 원소만 걸러내고 싶을 때 사용한다. 이를 좀 더 추상화 시켜보자. filter 함수의 파라미터로 어떻게 원소를 필터링 할지 체크하는 역할을 갖는 보조함수와 이터러블을 받는다. 특징 이라면 map, reduce 함수와 비슷하…","fields":{"slug":"/FP/함수형-프로그래밍(filter함수)/"},"frontmatter":{"date":"November 27, 2019","title":"함수형 프로그래밍(filter)","category":"FP"}}},{"node":{"excerpt":"reduce 함수는 이러터블의 원소들을 다 더해서 하나의 값으로 만들고 싶을 때 사용한다. 1. 구현 위와 같은 기능을 하는 함수가 reduce 이다. 외부 인터페이스에서는 reduce 함수가 어떻게 사용될까? 외부 인터페이스에서는 보조함수, 시작값, 이터러블(well-formed 이터레이터) 을 인자로 받는다. 이 reduce함수가 내부적으로 동작하는 …","fields":{"slug":"/FP/함수형-프로그래밍(reduce함수)/"},"frontmatter":{"date":"November 27, 2019","title":"함수형 프로그래밍(reduce)","category":"FP"}}},{"node":{"excerpt":"Map 함수 1. 구현 products 라는 배열에서 이름 따로 가격 따로 수집 한다고 해보자. 이런 경우에 사용하는 함수가 map 함수이다. 여기서 log()는 함수 밖 외부에 직접적으로 변화를 일으킨다. 함수형 프로그래밍 에서는 인자와 리턴값으로 소통 하는것을 권장한다. 따라서 names를 변화를 일으키는 다른 함수나 메소드에 전달하는게 아니라 리턴하…","fields":{"slug":"/FP/함수형-프로그래밍-(map함수)/"},"frontmatter":{"date":"November 26, 2019","title":"함수형 프로그래밍 (map)","category":"FP"}}},{"node":{"excerpt":"제너레이터 예제 1. 목표 제너레이터( 홀수만 리턴하는 제너레이터 ) 2. 제너레이터 함수의 파라미터로 limit 값 설정 제너레이터를 하나만 사용 했지만 더 많은 제너레이터를 함께 사용 해보자. 3. Infinity 제너레이터 생성 infinity 제너레이터는 파라미터로 받은 값이 없다면 0 있다면 그 값 부터 무한히 값을 yield하는 제너레이터다. …","fields":{"slug":"/FP/함수형-프로그래밍(제너레이터-예제)/"},"frontmatter":{"date":"November 26, 2019","title":"함수형 프로그래밍(제너레이터 예제)","category":"FP"}}},{"node":{"excerpt":"제너레이터와 이터레이터 제너레이터는 이터레이터이자 이터러블을 생성(리턴)하는 함수이다. 제너레이터 선언 제너레이터는 일반함수에 *을 붙여서 선언한다. 제너레이터 사용 위와 같이 제너레이터를 통해 이터레이터를 쉽게 만들 수 있고 yield 를 통해 몇번의 next() 함수를 호출 할지 정해줄 수 있다. 제너레이터를 통해 만들어진 이터레이터는 심볼 이터레이터…","fields":{"slug":"/FP/함수형-프로그래밍(제너레이터와-이터레이터)/"},"frontmatter":{"date":"November 23, 2019","title":"함수형 프로그래밍(제너레이터와 이터레이터)","category":"FP"}}},{"node":{"excerpt":"사용자 정의 이터러블, 이터레이터 구현 1.이터러블은 Symbol.iterator () 메소드를 가지고 있어야 한다. 2. Symbol.iterator () 메소드는  이터레이터를 반환해야한다. 이 이터레이터는 next ()  메소드를 가지고 있어야 한다. 3. next ()  메소드는 value와 done을 key갑으로 가지는 객체를 리턴해야 한다. 4…","fields":{"slug":"/FP/함수형-프로그래밍(사용자-정의-이터러블)/"},"frontmatter":{"date":"November 23, 2019","title":"함수형 프로그래밍(사용자 정의 이터러블)","category":"FP"}}},{"node":{"excerpt":"기존과 달라진 ES6 리스트 순회 Array, Set, Map 자바스크립트에는 Array, Set, Map 이라는 내장값 들을 가지고 있고 이를 for of문 으로 순회 가능하다. Array Array 문은 내부적으로 ES5의 for문이 동작하는 것과 같은 방식으로 for of 문이 동작한다. ( 인덱스로 인덱싱이 가능 ) Set for of 문을 동작 …","fields":{"slug":"/FP/함수형-프로그래밍(이터러블,-이터레이터)/"},"frontmatter":{"date":"November 23, 2019","title":"함수형 프로그래밍(이터러블, 이터레이터)","category":"FP"}}},{"node":{"excerpt":"평가와 일급 그리고 고차 함수 평가 평가랑 코드가 계산( Evaluation ) 되어 값을 만드는 것 일급 값으로 다룰 수 있다. 변수에 담을 수 있다. 함수의 인자로 사용될 수 있다. 함수의 결과로 사용될 수 있다. 함수의 일급 함수를 값으로 다룰 수 있다. 조합성과 추상화의 도구( 위 4가지 특성 생각 ) 고차 함수 함수를 값으로 다루는 함수 Case…","fields":{"slug":"/FP/함수형-프로그래밍(평가,일급,고차함수)/"},"frontmatter":{"date":"November 21, 2019","title":"함수형 프로그래밍(평가,일급,고차함수)","category":"FP"}}},{"node":{"excerpt":"딕셔너리 범용적으로 가장 많이 사용! ( JSON 과 비슷 ) 딕셔너리 자료형은 순서X, 키 중복X, 수정O, 삭제O 선언 자주 쓰이는 형태는 아니지만 dict() 함수 안에 리스트를 넣고 그 안에 원소로 key와 value를 갖는 튜플을 넣어주면 딕셔너리 선언이 가능하다. 또 다른 방법으로는 위와 같은 방법이 있다. ( 이게 가장 편한듯 ) 출력 key…","fields":{"slug":"/python/파이썬-기초-정리(자료형-딕셔너리)/"},"frontmatter":{"date":"November 20, 2019","title":"파이썬 기초 정리(자료형-딕셔너리)","category":"python"}}},{"node":{"excerpt":"튜플 리스트와 비교하여 생각하자. 튜플 자료형은 ( 순서 O, 중복 O, 수정X, 삭제X ) 즉, 한번 선언하면 끝까지 쓴다. 변하면 안 되는 데이터를 정의해놓으면 좋다. 선언 마지막 f처럼 가로가 없어도 튜플 선언이 된다. 인덱싱 리스트 자료형과 같은 방법으로 인덱싱이 가능하다. 튜플에서 리스트로 형 변환을 하게 되면, 불변성이 사라지고 리스트 자료형의…","fields":{"slug":"/python/파이썬-기초-정리(자료형-튜플)/"},"frontmatter":{"date":"November 19, 2019","title":"파이썬 기초 정리(자료형-튜플)","category":"python"}}},{"node":{"excerpt":"리스트 리스트 자료형은 순서 있고, 중복, 수정, 삭제가 가능한 유일한 자료형 이다. 리스트 선언 리스트 인덱싱 인덱싱은 내가 원하는 데이터를 꺼내오는 과정  문자열은 시퀀스 이기 때문에 리스트로 형 변환을 하게 되면 한글자 한글자 리스트 형태로 분해가 된다. 리스트 슬라이싱 리스트 연산 리스트 + 리스트 = 리스트, 리스트의 연산은 리스트가 나온다. 리…","fields":{"slug":"/python/파이썬-기초-정리(리스트)/"},"frontmatter":{"date":"November 18, 2019","title":"파이썬 기초 정리(자료형-리스트)","category":"python"}}},{"node":{"excerpt":"문자열 len() : 문자열의 길이를 구할 때 사용 빈 문자열을 선언할 때 str() 사용하자 \\ : 이스케이프 문자열, 자주 사용하는 이스케이프 문자열은 \\n ( 개행 처리 ), \\t( tab 처리 )  Raw string ( r’ ’ )은 이스케이프 문자열을 있는 그대로 출력. Python에서 = 뒤에오는 \\ 는 변수에 값을 바인딩 한다는 의미 문자열…","fields":{"slug":"/python/파이썬-기초-정리(문자열)/"},"frontmatter":{"date":"November 17, 2019","title":"파이썬 기초 정리(자료형-문자열)","category":"python"}}},{"node":{"excerpt":"Group user(소유자) 도 other도 아닌 어떤 사용자들을 그룹화 해보자 /var 폴더의 소유자는  image . 부분을 확인 해보면 root 이다. 따라서 /var 디렉토리에 mkdir 프로그램을 실행 하기 위해서는 access mode의 other부분에 쓰기(w) 권한이 있어야 한다. 첫번째 방법은 root 사용자로 로그인 ( su - root…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(group)/"},"frontmatter":{"date":"November 16, 2019","title":"생활코딩 리눅스 강좌(Group)","category":"linux"}}},{"node":{"excerpt":"Permission 의 예시 ls -l  의 Standard output 중에서 왼쪽 donguk이 나타내것은 소유자가 donguk 이라는 뜻 , 마지막 코드는 echo ‘hi’ 의 출력 값이 perm.txt에 출력 되어 저장이 된다. ( 물론 nano, vi 등 에디터를 이용해서 perm.txt 수정 가능 ) perm.txt의 소유자가 donguk인데 …","fields":{"slug":"/linux/생활코딩-리눅스-강좌(permission)/"},"frontmatter":{"date":"November 16, 2019","title":"생활코딩 리눅스 강좌(Permission)","category":"linux"}}},{"node":{"excerpt":"id, who 유닉스는 다중사용자 시스템 uid는 user의 id, gid는 group의 id 즉 내가 staff라는 group에 속해 있다는 뜻 현재 내 맥북에는 hong 이라는 유저만 접속 해 있다. 관리자와 일반 사용자 ( super user(root) vs user ) Shell에서 $는 일반사용자를 나타내고 #은 관리자( root) 를 나타낸다.…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(user)/"},"frontmatter":{"date":"November 16, 2019","title":"생활코딩 리눅스 강좌(user)","category":"linux"}}},{"node":{"excerpt":"CRON CRON 기본 명령어 정기적으로 명령을 실행시켜주는 소프트웨어 ( ex 백업, 정기적인 데이터 전송, 정기적으로 인터넷으로 시간조정? ) crontab -e  : 정기적으로 실행 시키고 싶은 작업을 설정 할 수 있음.  crontab -l : 처리한 cron 들을 확인 할 수 있다. crontab -r  : cron 삭제 CRON 주기 설정 ta…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(cron,-.bashrc)/"},"frontmatter":{"date":"November 16, 2019","title":"생활코딩 리눅스 강좌(cron, .bashrc)","category":"linux"}}},{"node":{"excerpt":"Daemon 의 개념 데몬에 해당하는 프로그램은 항상  켜져 있음. ls, mkdir, cd 이런 프로그램들은 데몬이 아님. 소위 server ( 예를들어 web server ) 라고 불리는 프로그램은 데몬에 해당한다. 이런 데몬에 해당하는 프로그램을 service 라고도 부른다. Daemon의 예시 컴퓨터가 부팅될 때 자동으로 Start 시키려면? 맨 …","fields":{"slug":"/linux/생활코딩-리눅스-강좌(daemon)/"},"frontmatter":{"date":"November 14, 2019","title":"생활코딩 리눅스 강좌(Daemon)","category":"linux"}}},{"node":{"excerpt":"컴퓨터 구조, 프로세스 모니터링, 백그라운드 실행 컴퓨터 구조 Storage SSD, HDD 같은 저장공간을 의미 가격이 낮고, 용량이 크지만 저장하고 읽는데 시간이 오래걸린다 Memory RAM Storage와 반대의 특성을 지닌다. ( 가격이 높고, 용량 작지만 저장하고 읽는데 소요되는 시간이 적음) Processor ( * Process 아님 ) C…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(프로세스와-실행)/"},"frontmatter":{"date":"November 13, 2019","title":"생활코딩 리눅스 강좌(프로세스와 실행)","category":"linux"}}},{"node":{"excerpt":"Directory Structure https://www.thegeekstuff.com/2010/09/linux-file-system-structure/ 참고 / : 최상위 디렉토리 ( root ) /bin : binary 줄임말, 컴퓨터에서는 실행가능한 프로그램을 binary라고함 > 프로그램들이 모여있는 directory /sbin : 시스템 관리자가…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(directory,-find)/"},"frontmatter":{"date":"November 10, 2019","title":"생활코딩 리눅스 강좌(directory, find)","category":"linux"}}},{"node":{"excerpt":"자료형 종류 파이썬 지원 자료형 int : 정수, float : 실수, complex : 복소수, bool : 불린 str : 문자열(시퀀스), list : 리스트(시퀀스), tuple : 튜플(시퀀스) set : 집합, dict : 사전 m은 내부적으로 int형 객체(<class ‘int’>)를 생성하고, n은 float형 객체(<class ‘float…","fields":{"slug":"/python/파이썬-기초-정리(자료형-숫자형)/"},"frontmatter":{"date":"November 09, 2019","title":"파이썬 기초 정리(자료형-숫자형)","category":"python"}}},{"node":{"excerpt":"print variables type(variable) : variable의 자료형 보여주는 함수 x=y=z=100 : 동시선언 가능 위 print구문이 내부적으로 300이라는 값을 출력하는 과정은 300 에 맞는 Object(<class ‘int’>)를 생성 하고 값을 생성하고(int(300)) 이 값을 출력 한다. 그리고 변수 생성도 이와 같은 절차를…","fields":{"slug":"/python/파이썬-기초-정리(print,-variable)/"},"frontmatter":{"date":"November 09, 2019","title":"파이썬 기초 정리(print, variable)","category":"python"}}},{"node":{"excerpt":"Shell harware - 컴퓨터의 기계적인 부분들 ( 메모리, 하드디스크 ,SSD, CPU 등등..) Kernel - 하드웨어를 제어하는 프로그램 ( 운영체제에서 코어역할을 한다.) Shell - 우리가 입력한 명령을 Kernel이 이해할수 있게 kernel에게 전달해줌. Kernel은 이를 하드웨어에 이해할 수 있게 전달한다.  echo $0 : 현…","fields":{"slug":"/linux/생활코딩-리눅스-강좌(shell)/"},"frontmatter":{"date":"November 09, 2019","title":"생활코딩 리눅스 강좌(Shell)","category":"linux"}}},{"node":{"excerpt":"IO Redirection IO Redirection ( Input Ouput Redirection ) : input 과 output의 방향을 바꾼다 UNIX 계열의 시스템은 Standard Input( Command ) 이 주어지면 Unix process를 거쳐 Standard output을 내보냄 ls -l 1> result.txt : ls -l 의 …","fields":{"slug":"/linux/생활코딩-리눅스-강좌(IO-Redirection)/"},"frontmatter":{"date":"November 09, 2019","title":"생활코딩 리눅스 강좌(IO Redirection)","category":"linux"}}},{"node":{"excerpt":"cp source target dir : source 파일을 target dir에 복사 ls -l dir name :  dir name 안에 있는 파일 정보 확인 mv source target dir : source 파일을 target dir로 이동시킨다.  target dir 와 현재위치가 같다면 파일이름을 변경 시킨다.  sudo : ( super u…","fields":{"slug":"/linux/생활코딩-리눅스-강좌( 기초-2 )/"},"frontmatter":{"date":"November 08, 2019","title":"생활코딩 리눅스 강좌(기초-2)","category":"linux"}}},{"node":{"excerpt":"명령어로 컴퓨터를 제어하는 방식을 CLI ( Command Line Interface ) 라고 한다. ls  현재 디렉토리의 파일목록 확인 ( 자세하게 보기는 ls -l) ls -l 했을때 맨 앞에 d 붙어 있으면 디렉토리, 아니면 파일 유닉스나 리눅스에서는 .으로 시작하는 파일은 기본적으로 감춰진 파일, 확인 하려면? ls -a .으로 시작하는 파일 출…","fields":{"slug":"/linux/생활코딩-리눅스-강좌( 기초-1 )/"},"frontmatter":{"date":"November 07, 2019","title":"생활코딩 리눅스 강좌(기초-1)","category":"linux"}}},{"node":{"excerpt":"1. 프로토콜 버퍼란? 프로토콜 버퍼는 XML, JSON과 같은  직렬화 데이터 구조 이다. 여기서 직렬화 데이터 구조의 예시를 잠깐 들면, hello를 ‘문자열 직렬화’ 할 경우 8(h) 65(e) 6C(l) 6C(l) 6F(o) 로 표현되고, 어떤 객체를 ‘JSON 포맷 직렬화’ 할 경우 {‘something’ : ‘something value’} 처…","fields":{"slug":"/cs/프로토콜-버퍼(protocol-buffer)/"},"frontmatter":{"date":"November 07, 2019","title":"프로토콜 버퍼(Protocol Buffer)","category":"cs"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}