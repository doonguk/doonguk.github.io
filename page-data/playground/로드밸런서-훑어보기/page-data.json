{"componentChunkName":"component---src-templates-blog-post-js","path":"/playground/로드밸런서-훑어보기/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"8971aeb5-552b-5c08-96cd-348b4bff7154","excerpt":"로드 밸런서 종류와 동작방식 왜 필요할까? 서버에 대용량 트래픽이 발생하면 이를 해결하기 위한 방법은 장비를 업그레이드 하는 방법(Scale-up)과 여러대의 장비르 두는 방법(Scale-out)이 있다. 만약 Scale-out 방식으로 여러대의 서버를 둔다면 ? image 해당 서비스에 접근하기 위해서는 여러 IP가 필요하다 여러 IP를 둔다면 사용자마다 각각 다른 IP로 접속 할 것이다. 이렇게 된다면 개발자 입장에서 원하는 방식으로 요청을 처리하기 어렵다. (A서버에 99개의 요청이 오고 B…","html":"<h1 id=\"로드-밸런서-종류와-동작방식\"><a href=\"#%EB%A1%9C%EB%93%9C-%EB%B0%B8%EB%9F%B0%EC%84%9C-%EC%A2%85%EB%A5%98%EC%99%80-%EB%8F%99%EC%9E%91%EB%B0%A9%EC%8B%9D\" aria-label=\"로드 밸런서 종류와 동작방식 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로드 밸런서 종류와 동작방식</h1>\n<h3 id=\"왜-필요할까\"><a href=\"#%EC%99%9C-%ED%95%84%EC%9A%94%ED%95%A0%EA%B9%8C\" aria-label=\"왜 필요할까 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>왜 필요할까?</h3>\n<p>서버에 대용량 트래픽이 발생하면 이를 해결하기 위한 방법은 장비를 업그레이드 하는 방법(Scale-up)과 여러대의 장비르 두는 방법(Scale-out)이 있다.</p>\n<p>만약 Scale-out 방식으로 여러대의 서버를 둔다면 ?</p>\n<p><img src=\"https://user-images.githubusercontent.com/39187116/77341211-bdb96f80-6d71-11ea-9b9c-dc00e559416a.png\" alt=\"image\"></p>\n<ol>\n<li>해당 서비스에 접근하기 위해서는 여러 IP가 필요하다</li>\n<li>여러 IP를 둔다면 사용자마다 각각 다른 IP로 접속 할 것이다.</li>\n<li>이렇게 된다면 개발자 입장에서 원하는 방식으로 요청을 처리하기 어렵다. (A서버에 99개의 요청이 오고 B서버에 1개의 요청 올 수 있지)</li>\n<li>이를 방지하기 위해 <strong>서버를 분산하고 요청을 적절하게 분산하는 작업이 필요하다</strong></li>\n</ol>\n<p>이렇게 두 개 이상의 컴퓨터 자원에 작업을 나누는 것을 <code class=\"language-text\">로드 밸런싱(Load Balancing)</code> 이라고 하고 이 작업을 담당하는 장비를 <code class=\"language-text\">로드 밸런서(Load Balancer)</code> 라고 한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/39187116/77341287-d7f34d80-6d71-11ea-8c2f-3b4446625b9c.png\" alt=\"image\"></p>\n<br/>\n<h3 id=\"로드밸런서-종류는-뭐가-있을까\"><a href=\"#%EB%A1%9C%EB%93%9C%EB%B0%B8%EB%9F%B0%EC%84%9C-%EC%A2%85%EB%A5%98%EB%8A%94-%EB%AD%90%EA%B0%80-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"로드밸런서 종류는 뭐가 있을까 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로드밸런서 종류는 뭐가 있을까?</h3>\n<table>\n<thead>\n<tr>\n<th>L2</th>\n<th>Data link 계층을 사용, Mac주소 기반 부하 분산</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>L3</td>\n<td>Network 계층을 사용, IP주소 기반 부하 분산</td>\n<td></td>\n</tr>\n<tr>\n<td>L4</td>\n<td>Transport 계층을 사용, Port 기반 부하 분산</td>\n<td>TCP, UDP</td>\n</tr>\n<tr>\n<td>L7</td>\n<td>Application 계층을 사용, 요청(URL) 기반 부하 분산</td>\n<td>HTTP, HTTPS 등</td>\n</tr>\n</tbody>\n</table>\n<p> OSI 7계층을 기준으로 어떻게 부하를 분산하는지에 따라 종류가 결정</p>\n<p>상위 계층으로 갈 수록 가격이 비싸지지만, 성능은 좋다</p>\n<p><img src=\"https://user-images.githubusercontent.com/39187116/77341647-6071ee00-6d72-11ea-999b-14d4a7b5fcae.png\" alt=\"image\"></p>\n<br/>\n<h3 id=\"로드-밸런서의-주요기능은\"><a href=\"#%EB%A1%9C%EB%93%9C-%EB%B0%B8%EB%9F%B0%EC%84%9C%EC%9D%98-%EC%A3%BC%EC%9A%94%EA%B8%B0%EB%8A%A5%EC%9D%80\" aria-label=\"로드 밸런서의 주요기능은 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로드 밸런서의 주요기능은?</h3>\n<ul>\n<li>NAT( Network Address Translation) : Private IP -> Public IP</li>\n<li>Tunneling: 데이터를 캡슐화 하여 연결된 노드만 캡슐을 해체할 수 있음</li>\n<li>Dynamic Source Routing protocol(DSR): 요청에 대한 응답을 할 떼 로드밸런서가 아닌 클라이언트 IP로 응답</li>\n</ul>\n<br/>\n<h3 id=\"그래서-로드밸런서-동작방법은\"><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-%EB%A1%9C%EB%93%9C%EB%B0%B8%EB%9F%B0%EC%84%9C-%EB%8F%99%EC%9E%91%EB%B0%A9%EB%B2%95%EC%9D%80\" aria-label=\"그래서 로드밸런서 동작방법은 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래서.. 로드밸런서 동작방법은?</h3>\n<p>기초적인 방법인 Bridge/Transparent Mode에서는 요청과 응답이 모두 로드밸런서를 경유한다.</p>\n<ol>\n<li>유저가 로드밸런서로 서비스 요청 (요청)</li>\n<li>로드밸런서는 NAT를 적용하여 IP/MAC주소 변조 후 해당 서버로 트래픽을 전송 (요청)</li>\n<li>서버가 로드밸런서로 요청에 대한 응답 전송 (응답)</li>\n<li>로드밸런서는 NAT를 적용하여 출발지 IP주소를(실제 서버 IP) 를 로드밸런서의 가상 IP주소로 변조하여 유저에게 전달</li>\n</ol>\n<br/>\n<h3 id=\"요청이-왔을-때-로드밸런서가-서버를-어떻게-선택할까\"><a href=\"#%EC%9A%94%EC%B2%AD%EC%9D%B4-%EC%99%94%EC%9D%84-%EB%95%8C-%EB%A1%9C%EB%93%9C%EB%B0%B8%EB%9F%B0%EC%84%9C%EA%B0%80-%EC%84%9C%EB%B2%84%EB%A5%BC-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%84%A0%ED%83%9D%ED%95%A0%EA%B9%8C\" aria-label=\"요청이 왔을 때 로드밸런서가 서버를 어떻게 선택할까 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요청이 왔을 때 로드밸런서가 서버를 어떻게 선택할까?</h3>\n<ol>\n<li>Round Robin : 요청이 들어오는 대로 서버마다 균등하게 분배</li>\n<li>Weighted Round Robin Scheduling: 서버마다 가중치 + Round Robin</li>\n<li>Least Connection: 서버마다 연결된 커넥션이 몇개인지 체크 > 가장 적은 서버로 요청 분배</li>\n<li>Weighted Least Connection: 서버마다 가중치 + Least Connection</li>\n<li>Fastest Response Time: 응답이 가장 빠른 서버를 체크하여 요청을 분배</li>\n<li>Source Hash Scheduling: 사용자의 IP는 고유하다. > 사용자 IP 해싱 > 결과에 따라 서버로 요청을 분배 ( 같은 요청은 같은 서버로)</li>\n</ol>\n<h3 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h3>\n<p><a href=\"https://deveric.tistory.com/m/91?fbclid=IwAR0z8Ydkz_5mR5sb9S4yTZQSzQkJQkibfOcRZ4tcM4IeCR2POkdobP25DqY\">https://deveric.tistory.com/m/91?fbclid=IwAR0z8Ydkz_5mR5sb9S4yTZQSzQkJQkibfOcRZ4tcM4IeCR2POkdobP25DqY</a></p>","frontmatter":{"title":"로드밸런서(load balancer) 훑어보기","date":"March 24, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/playground/로드밸런서-훑어보기/","previous":{"fields":{"slug":"/cs/nat-기초/"},"frontmatter":{"title":"NAT 기초","category":"cs"}},"next":{"fields":{"slug":"/algorithm/20200325-알고리즘/"},"frontmatter":{"title":"20200325 알고리즘","category":"algorithm"}}}}}