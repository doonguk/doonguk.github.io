{"componentChunkName":"component---src-templates-blog-post-js","path":"/cs/rest-&-api/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"76b30804-6f80-5f83-b217-c1e1630b502c","excerpt":"REST? Representational State Transfer의 약자로 전반적인 웹 어플리케이션에서 상호작용하는데 사용되는 웹 아키텍쳐 모델이다. 즉 자원을 주고 받는 웹 상에서의 통신 체계에 있어서 범용적인 스타일을 규정한 아키텍쳐라고 할 수 있다. 그럼, REST는 웹 상에서 서버와 클라이언트가 자원을 주고받는데 사용되는 아키텍처 모델이라고 할 수 있겠군 API? Application Programming Interface…","html":"<h2 id=\"rest\" style=\"position:relative;\"><a href=\"#rest\" aria-label=\"rest permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REST?</h2>\n<p>Representational State Transfer의 약자로 전반적인 웹 어플리케이션에서 상호작용하는데 사용되는 웹 아키텍쳐 모델이다. 즉 자원을 주고 받는 웹 상에서의 통신 체계에 있어서 범용적인 스타일을 규정한 아키텍쳐라고 할 수 있다.</p>\n<p><strong>그럼, REST는 웹 상에서 서버와 클라이언트가 자원을 주고받는데 사용되는 아키텍처 모델</strong>이라고 할 수 있겠군</p>\n<h2 id=\"api\" style=\"position:relative;\"><a href=\"#api\" aria-label=\"api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API?</h2>\n<p>Application Programming Interface의 약자로 <strong>기존에 있는 응용 프로그램을 통해서 데이터를 제공받거나 기능을 사용하고자 할 때 사용하는 인터페이스 및 규격</strong>을 말한다. 따라서 REST API는 REST 아키텍처 기반으로 API를 설계한 것을 말하며 대부분의 서비스가 REST API를 말한다</p>\n<p>그럼, <strong>API는 서버와 클라이언트가 자원을 주고 받는데 사용되는 인터페이스고 이를 구현할 때 REST 기반으로 구현한 API가 REST API군</strong></p>\n<h2 id=\"rest의-특징\" style=\"position:relative;\"><a href=\"#rest%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"rest의 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REST의 특징?</h2>\n<h3 id=\"무상태성-stateless-\" style=\"position:relative;\"><a href=\"#%EB%AC%B4%EC%83%81%ED%83%9C%EC%84%B1-stateless-\" aria-label=\"무상태성 stateless  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>무상태성( Stateless )</h3>\n<p>HTTP의 특징과 비슷하게 서버는 클라이언트를 고려하지 않고 API 요청에 대해서만 처리한다. </p>\n<h3 id=\"자체-표현성--self-desciptiveness-\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%B2%B4-%ED%91%9C%ED%98%84%EC%84%B1--self-desciptiveness-\" aria-label=\"자체 표현성  self desciptiveness  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자체 표현성 ( Self-Desciptiveness )</h3>\n<p>REST의 자원 명세 규칙을 잘 치킨 API는 HTTP 메소드와 함께 그 자체로 의미를 지니기 때문에 요청 자체로 어떤의미를 지니는지 알아보기 쉽다.</p>\n<h3 id=\"캐싱-가능--cacheable-\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%8B%B1-%EA%B0%80%EB%8A%A5--cacheable-\" aria-label=\"캐싱 가능  cacheable  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐싱 가능 ( Cacheable )</h3>\n<p>REST는 HTTP 표준을 기반으로 만들어졌기 때문에 HTTP의 특징인 캐싱을 사용할 수 있다.  서버에서 <code class=\"language-text\">GET</code> 메소드에 대한 응답으로 헤더의 <code class=\"language-text\">Last-Modified</code> 속성을 명시해주면, 클라이언트는 데이터의 변화가 없을 때 캐싱된 값을 사용한다. ( 서버의 부하가 줄어들겠군? )</p>\n<h3 id=\"균등한-인터페이스--uniform-interface-\" style=\"position:relative;\"><a href=\"#%EA%B7%A0%EB%93%B1%ED%95%9C-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4--uniform-interface-\" aria-label=\"균등한 인터페이스  uniform interface  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>균등한 인터페이스 ( Uniform Interface )</h3>\n<p>REST가 HTTP의 표준만 따른다면 어떠한 기술이던지 접목하여 사용할 수 있기 때문에 플랫폼이나 언어의 제약에 구애받지 않는다. 요즘은 REST API를 정의할 때 JSON을 많이 사용하지만 XML도 가능하다.</p>\n<h3 id=\"클랑이언트---서버-구조\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%91%EC%9D%B4%EC%96%B8%ED%8A%B8---%EC%84%9C%EB%B2%84-%EA%B5%AC%EC%A1%B0\" aria-label=\"클랑이언트   서버 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클랑이언트 - 서버 구조</h3>\n<p>REST 서버가 API를 제공하는 방식이기 때문에 클라이언트와 독립적으로 동작한다. 따라서, 서로간의 의존성이 줄어들고 클라이언트와 서버를 최대한 독립적으로 개발할 수 있도록 도와준다.</p>\n<h3 id=\"계층형-구조-layered-system\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%B8%B5%ED%98%95-%EA%B5%AC%EC%A1%B0-layered-system\" aria-label=\"계층형 구조 layered system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계층형 구조 (Layered System)</h3>\n<p>클라이언트는 계층형 구조가 불가능하지만 REST 서버의 경우, 보안/로드 밸런싱/암호화 등을 추가할 수 있고 Proxy 및 게이트웨이 등의 중간매체를 사용할 수 있다.</p>\n<h2 id=\"rest-api-명세\" style=\"position:relative;\"><a href=\"#rest-api-%EB%AA%85%EC%84%B8\" aria-label=\"rest api 명세 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REST API 명세(?)</h2>\n<h3 id=\"uri는-리소스를-표현해야-한다-즉-자체-표현성이-있어야-한다\" style=\"position:relative;\"><a href=\"#uri%EB%8A%94-%EB%A6%AC%EC%86%8C%EC%8A%A4%EB%A5%BC-%ED%91%9C%ED%98%84%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4-%EC%A6%89-%EC%9E%90%EC%B2%B4-%ED%91%9C%ED%98%84%EC%84%B1%EC%9D%B4-%EC%9E%88%EC%96%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"uri는 리소스를 표현해야 한다 즉 자체 표현성이 있어야 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URI는 리소스를 표현해야 한다. 즉 자체 표현성이 있어야 한다.</h3>\n<p><em>URL 과 HTTP Method만 보고 어떤 요청을 하는지 알 수 있어야 해~</em></p>\n<ul>\n<li>리소스 명은 동사가 아닌 명사를 사용해야 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">/</span>students<span class=\"token operator\">/</span><span class=\"token number\">1</span></code></pre></div>\n<ul>\n<li>리소스는 Collection과 Document로 표현하는데, Collection은 복수 Document는 단수를 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">/</span>locations<span class=\"token operator\">/</span>seoul<span class=\"token operator\">/</span>schools<span class=\"token operator\">/</span><span class=\"token number\">3</span></code></pre></div>\n<p>여기서 <code class=\"language-text\">locations</code>는 Collections를 <code class=\"language-text\">seoul</code>은 Document를 표현한다.</p>\n<h3 id=\"리소스에-대한-행위는-http의-method로-표현해야-한다\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%86%8C%EC%8A%A4%EC%97%90-%EB%8C%80%ED%95%9C-%ED%96%89%EC%9C%84%EB%8A%94-http%EC%9D%98-method%EB%A1%9C-%ED%91%9C%ED%98%84%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"리소스에 대한 행위는 http의 method로 표현해야 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리소스에 대한 행위는 HTTP의 Method로 표현해야 한다.</h3>\n<ul>\n<li>GET은 리소스를 조회한다.</li>\n<li>POST는 리소스를 생헝한다.</li>\n<li>PUT은 리소스를 업데이트한다.</li>\n<li>DELETE는 리소스를 삭제한다.</li>\n</ul>\n<p>즉, <strong>자원에 대한 명세는 URL에 명사를 사용해서 표현하고 행위는 HTTP Method를 이용한다.</strong></p>\n<h3 id=\"http-상태코드\" style=\"position:relative;\"><a href=\"#http-%EC%83%81%ED%83%9C%EC%BD%94%EB%93%9C\" aria-label=\"http 상태코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP 상태코드</h3>\n<p>요청에 대한 응답의 상태코드 또한 명확하게 들려주는 것이 잘 설계된 REST API이다.</p>\n<ul>\n<li>2xx: 성공 관련 (200 Ok, 201 Created)</li>\n<li>3xx: 리다이렉션 (304 Not Modified -> 요청한 자원이 수정x 캐시된 자원을 사용하라고 권고 )</li>\n<li>4xx : 클라이언트 에러 관련 (400 Bad Reequest, 401 Unauthorized)</li>\n<li>5xx : 서버 에러 관련 (500 Interner Server Error)</li>\n</ul>\n<h3 id=\"잘못된-rest-사용\" style=\"position:relative;\"><a href=\"#%EC%9E%98%EB%AA%BB%EB%90%9C-rest-%EC%82%AC%EC%9A%A9\" aria-label=\"잘못된 rest 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>잘못된 REST 사용..</h3>\n<ul>\n<li>GET/POST의 부적합한 사용 : 기존의 조회/생성의 기능이 아닌 다른방식으로 사용한 경우</li>\n<li>자체 표현력이 떨어지는 경우: URI와 HTTP 메소드를 통해서 자체적으로 어떤 자원에 어떤 행위를 하는지 알 수 있어야 한다.</li>\n<li>HTTP 응답코드 미사용</li>\n</ul>","frontmatter":{"title":"REST & API","date":"June 10, 2020"}}},"pageContext":{"slug":"/cs/rest-&-api/","previous":{"fields":{"slug":"/cs/uri-&-url-&-urn/"},"frontmatter":{"title":"URI & URL & URN","category":"cs"}},"next":{"fields":{"slug":"/cs/쿠키&세션&스토리지/"},"frontmatter":{"title":"쿠키 & 세션 & 스토리지","category":"cs"}}}},"staticQueryHashes":["3128451518","96099027"]}