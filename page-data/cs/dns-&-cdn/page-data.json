{"componentChunkName":"component---src-templates-blog-post-js","path":"/cs/dns-&-cdn/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"59076d63-7ee1-5311-bdcf-1c3eb44b4634","excerpt":"DNS DNS Service? 네트워크의 도메인이나 호스트 이름을 숫자로 된 IP 주소로 해석( 반대의 경우도 해석 )해주는 Network Service이다. DNS Server DNS Service를 제공하는 서버이다. IP에 대한 도메인을 저장하고 있기 때문에, 일종의 전화번호부 역할을 하며 DNS Server가 모여 DNS( Domain Name System )을 구성한다. (분산형 데이터베이스 시스템) DNS Server는 어떤 프로토콜 위에서 동작할까? DNS 서버는 보통 UDP…","html":"<h2 id=\"dns\" style=\"position:relative;\"><a href=\"#dns\" aria-label=\"dns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS</h2>\n<h3 id=\"dns-service\" style=\"position:relative;\"><a href=\"#dns-service\" aria-label=\"dns service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS Service?</h3>\n<p>네트워크의 도메인이나 호스트 이름을 숫자로 된 IP 주소로 해석( 반대의 경우도 해석 )해주는 Network Service이다.</p>\n<h3 id=\"dns-server\" style=\"position:relative;\"><a href=\"#dns-server\" aria-label=\"dns server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS Server</h3>\n<p>DNS Service를 제공하는 서버이다. IP에 대한 도메인을 저장하고 있기 때문에, 일종의 전화번호부 역할을 하며 DNS Server가 모여 <strong>DNS( Domain Name System )</strong>을 구성한다. (분산형 데이터베이스 시스템)</p>\n<blockquote>\n<p>DNS Server는 어떤 프로토콜 위에서 동작할까?</p>\n<p><strong>DNS 서버는 보통 UDP 프로토콜을 이용</strong>한다. TCP를 이용하면 신뢰성을 보장하기 위한 3-way handshaking 작업이 요청마다 일어날 것이고 많은 요청을 받아들이는 DNS 서버 입장에서 부하가 생길 수 있다. </p>\n<p>또 DNS 요청은 매우 작아서 UDP 세그먼트에 내에 잚 맞는다. 하지만! 데이터 전송량이 커서 신뢰성 있는 데이터를 보장받기 위해 TCP를 사용하기도 한다.</p>\n</blockquote>\n<h3 id=\"그럼-url을-입력하면-어떤-일이-일어날까\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%BC-url%EC%9D%84-%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4-%EC%96%B4%EB%96%A4-%EC%9D%BC%EC%9D%B4-%EC%9D%BC%EC%96%B4%EB%82%A0%EA%B9%8C\" aria-label=\"그럼 url을 입력하면 어떤 일이 일어날까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그럼 URL을 입력하면 어떤 일이 일어날까~</h3>\n<ol>\n<li>URL을 웹 브라우저의 주소창에 입력한다.</li>\n<li>웹 브라우저가 URL을 해석하고, 문법에 맞지 않으면 기본 검색엔진으로 검색한다.</li>\n<li>문법에 맞으면 URL의 호스트 부분을 인코딩한다.</li>\n<li>HSTS( HTTP Strict Transport Security ) 목록을 확인하고 있으면 HTTPS로 없으면 HTTP 요청을 한다.</li>\n<li>\n<p><strong>DNS (Domain Name Server)</strong> 를 조회한다.</p>\n<ol>\n<li>브라우저/로컬 캐시를 확인해서 해당 도메인의 IP가 있는지 확인한다.</li>\n<li>없으면 OS에게 DNS서버에 요청하라고 지시한다.</li>\n<li>DNS 서버는 해당 도메인에 해당하는 IP를 응답해준다.</li>\n</ol>\n</li>\n<li>TCP 소켓을 열고 3-way handshake로 클라이언트 - 서버간 세션을 수립한다.</li>\n<li>HTTPS 요청이라면 TLS handshake 과정을 통해 세션키를  생성한다.</li>\n<li>서버 - 클라이언트간 요청을 주고받는다. ( 캐싱 가능한 데이터는 캐싱도 하고.. )</li>\n<li>웹 브라우저는 받은 리소스를 렌더링한다.</li>\n<li>4-way hanshake 과정을 통해 세션을 종료한다.</li>\n</ol>\n<blockquote>\n<p>요약 하자면</p>\n<p>주소창에 url을 입력하면 <strong>DNS 서버를 조회해서 도메인에 해당하는 IP</strong>를 받고 해당 IP를 갖고있는 서버와 TCP 프로토콜 기반으로 세션을 수립하고 ( HTTPS는 추가적인 과정 거치겠지 ) 클라이언트는 서버로부터 자원을 받은 뒤 세션을 종료한다. 라고 할 수 있겠군.</p>\n</blockquote>\n<br/>\n<h2 id=\"cdn--contents-delivery-network-\" style=\"position:relative;\"><a href=\"#cdn--contents-delivery-network-\" aria-label=\"cdn  contents delivery network  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CDN ( Contents Delivery Network )</h2>\n<p>CDN은 컨텐츠 전달 네트워크의 약자로 말 그대로, <strong>컨텐츠를 전달하는 네트워크</strong>를 구성하는 것이다. 보통 웹 서버에 HTTP 요청을 하여 리소스를 가져오지만 <strong>웹 서버가 아니라 현재 사용자가 접속한 위치에서 가장 가까운 서버에 리소스를 캐싱</strong> 해놓고 보다 빠르게 가져오는 기법이다. 물론 네트워크를 구축하는데 비용이 들긴 하지만 만약 구축하게 되면, <strong>정적 리소스를 보다 빠른 속도로 서비스할 수 있다.</strong></p>\n<p>즉, End Point 유저가 Origin 서버에 요청을 하게되면, 응답을 받는 시간도 길어지고 Origin 서버 입장에서는 여러 유저의 요청을 받아 들이면 부하도 심해질거야. 그러니 중간에 캐시서버를 여러개 만들어서 가까운 캐시서버가 서비스를 제공하면 부하도 줄어들고 사용자 경험도 증가하겠지~</p>\n<h3 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<ul>\n<li>리소스를 캐싱해놓기 때문에 응답속도(로딩속도)가 빠르다.</li>\n<li>Origin 서버의 부하가 줄어든다.</li>\n</ul>\n<h3 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<ul>\n<li>캐시서버 네트워크를 구축하는 데 비용이 많이 든다.</li>\n<li>사용자가 CDN을 막아놓으면 리소스 로딩이 막힌다.</li>\n</ul>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ol>\n<li><a href=\"https://byeong9935.tistory.com/13\">https://byeong9935.tistory.com/13</a></li>\n<li><a href=\"https://dother-world.tistory.com/9\">https://dother-world.tistory.com/9</a></li>\n<li><a href=\"https://github.com/baeharam/Must-Know-About-Frontend/blob/master/Notes/network/type-url-process.md\">https://github.com/baeharam/Must-Know-About-Frontend/blob/master/Notes/network/type-url-process.md</a></li>\n</ol>","frontmatter":{"title":"DNS & CDN","date":"June 11, 2020"}}},"pageContext":{"slug":"/cs/dns-&-cdn/","previous":{"fields":{"slug":"/cs/쿠키&세션&스토리지/"},"frontmatter":{"title":"쿠키 & 세션 & 스토리지","category":"cs"}},"next":{"fields":{"slug":"/cs/html-궁금했던-개념들/"},"frontmatter":{"title":"HTML 궁금했던 개념들","category":"cs"}}}},"staticQueryHashes":["3128451518","96099027"]}