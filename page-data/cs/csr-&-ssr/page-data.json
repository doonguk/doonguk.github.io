{"componentChunkName":"component---src-templates-blog-post-js","path":"/cs/csr-&-ssr/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"dd8add0f-4da6-5f9a-939f-5981377e2410","excerpt":"SPA & MPA image SPA (Single Page Application) 웹 어플리케이션에 필요한 모든 정적 컨텐츠를 최초 한번에 다운로드 받는다. 그 후 새로운 페이지 요청이 있을 경우, 페이지 갱신에 필요한 데이터만 전달받아 페이지를 갱신한다. 즉, 하나의 HTML을 기반으로 자바스크립트를 이용해 동적으로 화면의 컨텐츠를 바꾸는 방식의 웹 어플리케이션이다. MPA (Multiple Page Application…","html":"<h2 id=\"spa--mpa\"><a href=\"#spa--mpa\" aria-label=\"spa  mpa permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SPA &#x26; MPA</h2>\n<p><img src=\"https://user-images.githubusercontent.com/39187116/83652198-503d8100-a5f5-11ea-90fc-625fd88c3713.png\" alt=\"image\"></p>\n<ul>\n<li>SPA (Single Page Application)</li>\n</ul>\n<p>웹 어플리케이션에 필요한 모든 정적 컨텐츠를 <strong>최초 한번에</strong> 다운로드 받는다. 그 후 새로운 페이지 요청이 있을 경우, 페이지 갱신에 <strong>필요한 데이터만</strong> 전달받아 페이지를 갱신한다.</p>\n<p>즉, 하나의 HTML을 기반으로 자바스크립트를 이용해 동적으로 화면의 컨텐츠를 바꾸는 방식의 웹 어플리케이션이다.</p>\n<ul>\n<li>MPA (Multiple Page Application)</li>\n</ul>\n<p>새로운 페이지를 <strong>요청할 때마다</strong> 정적 컨텐츠를 다운로드 한다. 그에 맞춰 <strong>전체 페이지</strong>를 다시 렌더링한다. 인터넷 주소창에 주소를 입력하거나, 링크를 클릭하면 그에 맞는 정적 컨텐츠를 다운받고 새로고침이 일어난다.</p>\n<p>즉, 사용자가 페이지를 요청할 때마다, 웹 서버가 요청한 UI와 필요한 데이터를 HTML로 파싱해서 보여주는 방식의 웹 어플리케이션이다. </p>\n<p>그래서 SPA를 CSR(Client Side Rendering) 방식으로, MPA을 SSR(Server Side Rendering) 방식으로 렌더링한다고 말한다.</p>\n<h2 id=\"csr-client-side-rendering\"><a href=\"#csr-client-side-rendering\" aria-label=\"csr client side rendering permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSR (Client Side Rendering)</h2>\n<p>CSR에서는 브라우저가 서버에 정적 컨텐츠를 최초에 한번 요청한 후 로드되면 사용자의 상호작용에 따라 JS를 이용해서 동적으로 렌더링을 시킨다.</p>\n<h3 id=\"장점\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점?</h3>\n<ul>\n<li>첫 로딩만 기다리면, 동적으로 빠르게 렌더링이 되기 때문에 사용자 경험이 좋다.</li>\n<li>서버에 요청하는 횟수가 훨씬 적다 -> 서버의 부담이 덜하다.</li>\n<li>개발하기에 심플하다. ( 프론트엔드와 백엔드가 분리 + 크롬으로 디버깅도 쉽다 )</li>\n</ul>\n<h3 id=\"단점\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점..</h3>\n<ul>\n<li>최초에 모든 정적컨텐츠를 다운받아야 하기 때문에 SSR 방식보다 초기 로딩속도가 느리다. ( 리소스를 Chunk 단위로 묶어서 요청할 때만 다운받게 하는 방식이 있지만 완벽한 방법은 아니라고 한다. )</li>\n<li>검색엔진의 검색 봇이 크롤링을 하는데 어렴울 겪는다..( SEO가 좋지 않다.)</li>\n</ul>\n<h2 id=\"ssrserver-side-rendering\"><a href=\"#ssrserver-side-rendering\" aria-label=\"ssrserver side rendering permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSR(Server Side Rendering)</h2>\n<p>SSR에서는 브라우저가 페이지를 요청하면 서버는 페이지에 맞는 정적 컨텐츠를 응답해주는 방식으로 렌더링을 시킨다.</p>\n<h3 id=\"장점-1\"><a href=\"#%EC%9E%A5%EC%A0%90-1\" aria-label=\"장점 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점?</h3>\n<ul>\n<li>초기 로딩속도가 빠르다. 따라서 사용자가 컨텐츠를 빨리 볼 수 있다.</li>\n<li>JS를 이용한 렌더링이 아니기 때문에 검색엔진 최적화가 가능하다.</li>\n</ul>\n<h3 id=\"단점-1\"><a href=\"#%EB%8B%A8%EC%A0%90-1\" aria-label=\"단점 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점..</h3>\n<ul>\n<li>매번 페이지를 요청할 때마다 새로고침이 일어난다. 따라서 UX가 SPA방식에 비해 좋지않다.</li>\n<li>서버에 매번 요청을 하기 때문에 서버의 부하가 커진다.</li>\n<li>프론트엔드와 백엔드가 밀접하게 연관되어 개발할 때 SPA보다 어려움이 있다.</li>\n</ul>\n<h2 id=\"결론\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>SPA, MPA를 상에 맞게 사용하면 된다..ㅎㅎ</p>\n<h3 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h3>\n<ol>\n<li><a href=\"https://medium.com/@adamzerner/client-side-rendering-vs-server-side-rendering-a32d2cf3bfcc\">https://medium.com/@adamzerner/client-side-rendering-vs-server-side-rendering-a32d2cf3bfcc</a></li>\n<li><a href=\"https://velog.io/@thms200/SPA-vs.-MPA\">https://velog.io/@thms200/SPA-vs.-MPA</a></li>\n<li><a href=\"https://docs.microsoft.com/en-us/archive/msdn-magazine/2013/november/asp-net-single-page-applications-build-modern-responsive-web-apps-with-asp-net\">https://docs.microsoft.com/en-us/archive/msdn-magazine/2013/november/asp-net-single-page-applications-build-modern-responsive-web-apps-with-asp-net</a></li>\n</ol>","frontmatter":{"title":"CSR & SSR","date":"June 04, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/cs/csr-&-ssr/","previous":{"fields":{"slug":"/cs/웹-서버-&-was/"},"frontmatter":{"title":"웹 서버 & WAS","category":"cs"}},"next":{"fields":{"slug":"/javascript/babel/"},"frontmatter":{"title":"Babel","category":"javascript"}}}}}