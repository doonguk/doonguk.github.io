{"componentChunkName":"component---src-templates-blog-post-js","path":"/cs/이진-탐색/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"3846eb01-af22-5c28-8a5a-69acb9971421","excerpt":"탐색 이진탐색( Binary Search ) 알고리즘 이진탐색 (binary search) 시간복잡도  정렬된 자료를 반으로 나누어 탐색 단, 자료는  으로 정렬된 자료여야 한다. 퍼포먼스가 좋다 핵심 변수  : 리스트의 첫번째 원소 idx  : 리스트의 마지막 원소 idx  : (start + end) // 2 Big-O K번 실행시 남은 자료의 개수는 n*(1/2)^k 탐색이 끝나는 시점에 남은자료의 개수는 1 -> n*(1/2)^k = 1 양변에 2^k를 곱하면 n = 2^k -> log…","html":"<h1 id=\"탐색-이진탐색-binary-search--알고리즘\"><a href=\"#%ED%83%90%EC%83%89-%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89-binary-search--%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"탐색 이진탐색 binary search  알고리즘 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[탐색] 이진탐색( Binary Search ) 알고리즘</h1>\n<h3 id=\"이진탐색-binary-search\"><a href=\"#%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89-binary-search\" aria-label=\"이진탐색 binary search permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이진탐색 (binary search)</h3>\n<ul>\n<li>시간복잡도 <code class=\"language-text\">logN</code></li>\n<li>정렬된 자료를 반으로 나누어 탐색</li>\n<li>단, 자료는 <code class=\"language-text\">오름차순</code> 으로 정렬된 자료여야 한다.</li>\n<li>퍼포먼스가 좋다</li>\n</ul>\n<h3 id=\"핵심-변수\"><a href=\"#%ED%95%B5%EC%8B%AC-%EB%B3%80%EC%88%98\" aria-label=\"핵심 변수 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>핵심 변수</h3>\n<ul>\n<li><code class=\"language-text\">start</code> : 리스트의 첫번째 원소 idx</li>\n<li><code class=\"language-text\">end</code> : 리스트의 마지막 원소 idx</li>\n<li><code class=\"language-text\">mid</code> : (start + end) // 2</li>\n</ul>\n<h3 id=\"big-o\"><a href=\"#big-o\" aria-label=\"big o permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Big-O</h3>\n<ul>\n<li>K번 실행시 남은 자료의 개수는 n*(1/2)^k</li>\n<li>탐색이 끝나는 시점에 남은자료의 개수는 1 -> n*(1/2)^k = 1</li>\n<li>양변에 2^k를 곱하면 n = 2^k -> log2^N = k</li>\n<li>k의 의미는 <code class=\"language-text\">실행횟수</code> 따라서 N에 따른 시행횟수는 O(logN) 으로 표기 가능</li>\n</ul>\n<h3 id=\"구현1\"><a href=\"#%EA%B5%AC%ED%98%841\" aria-label=\"구현1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현1</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">binary_search</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  start <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  end <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n  <span class=\"token keyword\">while</span> start<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">:</span>\n    mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">+</span>end<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2</span>\n    <span class=\"token keyword\">if</span> target <span class=\"token operator\">==</span> data<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> mid\n    <span class=\"token keyword\">elif</span> data<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">:</span>\n      start <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n      end <span class=\"token operator\">=</span> mid<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></code></pre></div>\n<h3 id=\"구현2-by-recursion\"><a href=\"#%EA%B5%AC%ED%98%842-by-recursion\" aria-label=\"구현2 by recursion permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현2 By Recursion</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># data는 오름차순 정렬된 데이터라고 가정</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">binary_search</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> start <span class=\"token operator\">></span> end<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n  mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">+</span>end<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n  <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">elif</span> data<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">:</span>\n    start <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    end <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">return</span> binary_search<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Binary Search","date":"March 05, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/cs/이진-탐색/","previous":{"fields":{"slug":"/algorithm/20200302-알고리즘/"},"frontmatter":{"title":"20200302 알고리즘","category":"algorithm"}},"next":{"fields":{"slug":"/algorithm/20200303-알고리즘/"},"frontmatter":{"title":"20200303 알고리즘","category":"algorithm"}}}}}