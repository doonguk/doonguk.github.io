{"componentChunkName":"component---src-templates-blog-post-js","path":"/cs/정렬(1)/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"4e1f93e1-74d4-5aa1-ad51-c7bc69de1a33","excerpt":"Bubble Sort 시간복잡도 O(n2), 공간복잡도 O(1) 현재 처리되는 원소와 다음 인덱스의 원소를 비교하여 현재 원소가 더 크면 서로 교체 Selection Sort (worst, best, average ) 시간복잡도 O(n2)  인자로 받은 배열의 첫번째 원소를 minum value로 설정 두번째 원소부터 배열의 끝 까지 반복문을 순회하며 minum value와 크기 비교 만약 minus value보다 원소의 크기가 작다면  minum value…","html":"<h2 id=\"bubble-sort\"><a href=\"#bubble-sort\" aria-label=\"bubble sort permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bubble Sort</h2>\n<ul>\n<li>시간복잡도 O(n2), 공간복잡도 O(1)</li>\n<li>현재 처리되는 원소와 다음 인덱스의 원소를 비교하여 현재 원소가 더 크면 서로 교체</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 끝까지 안돌고 마지막 전 까지만</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">if</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">return</span> <span class=\"token builtin\">iter</span></code></pre></div>\n<h2 id=\"selection-sort\"><a href=\"#selection-sort\" aria-label=\"selection sort permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Selection Sort</h2>\n<ul>\n<li>(worst, best, average ) 시간복잡도 O(n2) </li>\n</ul>\n<blockquote>\n<ol>\n<li>인자로 받은 배열의 첫번째 원소를 minum value로 설정</li>\n<li>두번째 원소부터 배열의 끝 까지 반복문을 순회하며 minum value와 크기 비교</li>\n<li>만약 minus value보다 원소의 크기가 작다면  minum value를 해당 원소로 교체</li>\n<li>배열의 끝까지 순회한 뒤 첫번째 원소와 minum value가 다르다면 두 원소를 서로 교체</li>\n<li>두번째 원소부터 배열의 마지막 원소 전 까지 1,2,3,4 과정 반복</li>\n</ol>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">selectionSort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        idx_min <span class=\"token operator\">=</span> i\n        j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">while</span> j <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>idx_min<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                idx_min <span class=\"token operator\">=</span> j\n            j <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n            \n        <span class=\"token keyword\">if</span> idx_min <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> i<span class=\"token punctuation\">:</span>\n            <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>idx_min<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>idx_min<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">iter</span></code></pre></div>\n<h2 id=\"insertion-sort\"><a href=\"#insertion-sort\" aria-label=\"insertion sort permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>InSertion Sort</h2>\n<blockquote>\n<ol>\n<li>배열의 첫번째 원소를 정렬된 배열에 넣음</li>\n<li>배열의 두번째 원소를 정렬된 배열의 끝에 있는 원소 ( 현재는 정렬된 배열의 길이는 1 ) 와 비교</li>\n<li>만약 두번째 원소가 크다면 그대로 두번째 원소를 정렬된 배열의 끝에 삽입</li>\n<li>만약 두번째 원소가 작다면 정렬된 배열의 첫번째 자리에 삽입</li>\n<li>세번째 원소도 같은 방법으로 정렬된 배열과 비교하여 자신이 있어야할 위치에 삽입</li>\n</ol>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">insertion_sort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> valueToInsert <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        p <span class=\"token operator\">=</span> idx <span class=\"token comment\"># 원소가 삽입 되어야할 위치</span>\n\n        <span class=\"token keyword\">while</span> p <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> valueToInsert<span class=\"token punctuation\">:</span>\n            <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>p <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 배열을 뒤로 밀어(?) 느낌을 이렇게</span>\n            p <span class=\"token operator\">=</span> p <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">iter</span> </code></pre></div>\n<h2 id=\"merge-sort\"><a href=\"#merge-sort\" aria-label=\"merge sort permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Merge Sort</h2>\n<ul>\n<li>시간복잡도 O(nlogn), 공간복잡도 O(n)</li>\n</ul>\n<blockquote>\n<ol>\n<li>배열을 반절로 재귀적으로 분리 ( 분리된 각 원소가 1개 남을 떄 까지 )</li>\n<li>재귀적인 함수 호출로 인해 쌓인 스택 순서대로 왼쪽 배열과 오른쪽 배열의 값을 비교하면서 합침</li>\n</ol>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Splitting \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        mid <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2</span> <span class=\"token comment\"># //는 몫</span>\n        lefthalf <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>mid<span class=\"token punctuation\">]</span>\n        righthalf <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n        mergeSort<span class=\"token punctuation\">(</span>lefthalf<span class=\"token punctuation\">)</span>\n        mergeSort<span class=\"token punctuation\">(</span>righthalf<span class=\"token punctuation\">)</span>\n\n        i<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token comment\"># leftHalf index</span>\n        j<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token comment\"># rightHalf index</span>\n        k<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token comment\"># iter index</span>\n        <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>lefthalf<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> j <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>righthalf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> lefthalf<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> righthalf<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>lefthalf<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n                i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>righthalf<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                j<span class=\"token operator\">=</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n            k<span class=\"token operator\">=</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>lefthalf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 왼쪽 배열만 남으면 그대로 iter에 붙여줘</span>\n            <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>lefthalf<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n            k<span class=\"token operator\">=</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">while</span> j <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>righthalf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 오른쪽 배열만 남으면 그대로 iter에 붙여줘</span>\n            <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>righthalf<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n            j<span class=\"token operator\">=</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n            k<span class=\"token operator\">=</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Merging \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>아이디어 참고</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 반절 나눌 때</span>\nmid <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\nleftHalf <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>mid<span class=\"token punctuation\">]</span>\nrightHalf <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># reculsive</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  leftHalf <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>mid<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'leftHalf id'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>leftHalf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  mergeSort<span class=\"token punctuation\">(</span>leftHalf<span class=\"token punctuation\">)</span>\n  \n<span class=\"token keyword\">def</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#mergetSort(leftHalf)에 의해 호출된 함수</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'iterId'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  lefthalf <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>mid<span class=\"token punctuation\">]</span>\n  mergeSort<span class=\"token punctuation\">(</span>leftHalf<span class=\"token punctuation\">)</span></code></pre></div>\n<p>객체 참조에 의해 두 프린트문 에서 출력된 id 값은 같다.  따라서 안에서 호출된 재귀함수로 값을 수정하면 외부 함수의 값이 변경된다!</p>","frontmatter":{"title":"정렬(1)","date":"December 19, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/cs/정렬(1)/","previous":{"fields":{"slug":"/FP/함수형-프로그래밍(l.flatmap)/"},"frontmatter":{"title":"함수형 프로그래밍(L.flatMap)","category":"javascript"}},"next":{"fields":{"slug":"/FP/callback과-promise/"},"frontmatter":{"title":"Callback과 Promise","category":"javascript"}}}}}