{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/모듈(module)/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"9249c044-fc0b-5189-9478-99f767a2e5eb","excerpt":"모듈(module…","html":"<h2 id=\"모듈module이란\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88module%EC%9D%B4%EB%9E%80\" aria-label=\"모듈module이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈(module)이란?</h2>\n<p>모듈이란 <strong>여러 기능들에 관한 코드가 모여있는 파일</strong>로 다음과 같은 기능이 있다.</p>\n<ul>\n<li><strong>유지보수성</strong> : 기능들이 모듈화가 잘 되어있다면, <strong>의존성을 그만큼 줄일 수 있</strong>기 때문에 어떤 기능을 개선한다거나 수정할 때 훨씬 편하게 할 수있다.</li>\n<li><strong>네임스페이스화</strong> : 자바스크립트에서 전역변수는 전역공간을 가지기 때문에 코드의 양이 많아질수록 겹치는 네임스페이스가 많아질 수 있다. 그러나 <strong>모듈로 분리하면 모듈만의 네임스페이스를 갖기</strong> 때문에 그 문제가 해결된다.</li>\n<li><strong>재사용성</strong> : 똑같은 코드를 반복하지 않고 모듈로 분리시켜서 필요할 때마다 재사용 할 수 있다.</li>\n</ul>\n<br/>\n<h2 id=\"commonjs\" style=\"position:relative;\"><a href=\"#commonjs\" aria-label=\"commonjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CommonJS</h2>\n<ul>\n<li>자바스크립트의 공식 스펙은 브라우저만 지원하는데 이를 서버사이드 및 데스크탑 어플리케이션에서 지원하기 위한 노력이 있었고 이를 위해 만든 그룹이 <code class=\"language-text\">CommonJS</code>이다. 현재 NodeJS에서는 이 방식을 사용하고 있다.</li>\n<li>다른 모듈을 사용할 때는 <code class=\"language-text\">require</code>를, 모듈을 해당 스코프 밖으로 보낼 때에는 <code class=\"language-text\">module.exports</code>를 사용한다. </li>\n<li><code class=\"language-text\">webpack</code>은 CommonJS를 지원하기 때문에 <code class=\"language-text\">NodeJS</code>가 아닌 환경에서도 사용 가능하다.</li>\n<li><strong>webpack 없이 spec을 구현한 벤더의 라이브러리를 가져와서 사용할 수 있는지는 확인이 필요하다.</strong></li>\n</ul>\n<h3 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//a.js</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printHelloWolrd</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> printHelloWorld <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//b.js</span>\n<span class=\"token keyword\">const</span> aObj <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./a.js'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 같은 dir라고 가정.</span>\naObj<span class=\"token punctuation\">.</span><span class=\"token function\">printHelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'hello world'</span></code></pre></div>\n<p><code class=\"language-text\">module.exports</code>의 <code class=\"language-text\">module</code>은 현재 모듈에 대한 정보를 갖고있는 객체이다. <code class=\"language-text\">id</code>, <code class=\"language-text\">path</code>, <code class=\"language-text\">parent</code>등 의 속성이 있고 <code class=\"language-text\">exports</code>라는 프로퍼티를 갖고 있다.</p>\n<h3 id=\"code-classlanguage-textexportscode-vs-code-classlanguage-textmoduleexportscode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textexportscode-vs-code-classlanguage-textmoduleexportscode\" aria-label=\"code classlanguage textexportscode vs code classlanguage textmoduleexportscode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">exports</code> vs <code class=\"language-text\">module.exports</code></h3>\n<ul>\n<li><code class=\"language-text\">module.exports</code>는 빈 객체를 참조한다.</li>\n<li><code class=\"language-text\">exports</code>는 <code class=\"language-text\">module.exports</code>를 참조한다.</li>\n<li><code class=\"language-text\">require</code>는 항상 <code class=\"language-text\">module.exports</code>를 리턴받는다.</li>\n</ul>\n<p>즉, 함수를 모듈 밖으로 내보내고자 할 때는 아래 2가지를 모두 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">exports<span class=\"token punctuation\">.</span>printHelloWolrd <span class=\"token operator\">=</span> printHelloWolrd\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> printHelloWolrd <span class=\"token punctuation\">}</span></code></pre></div>\n<p>이는 <code class=\"language-text\">exports</code> 에 어떤 값을 할당하거나 새로운 객체를 할당했다고 하더라도 결국 <code class=\"language-text\">require</code> 는 <code class=\"language-text\">module.exports</code> 를 리턴받기 때문에 가능하다.</p>\n<h3 id=\"문제점\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"문제점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제점</h3>\n<p><strong>CommonJS의 모듈 명세는 모든 파일이 로컬 디스크에 있어 필요할 때 바로 불러올 수 있는 상황을 전제로 한다. 다시 말해 서버사이드 JavaScript 환경을 전제로 한다.</strong></p>\n<p>따라서 필요한 모듈들을 다운받을 때 까지 브라우저에서는 아무것도 할 수 없는 문제가 생긴다.  CommonJS 그룹은 처음에 <code class=\"language-text\">&lt;script&gt;</code> 태그를 동적으로 삽입하는 방법을 사용했다. 하지만 브라우저에서는 <strong>파일들간에 scope가 구분되지 않기</strong> 때문에 전역변수가 오염될 가능성이 높다. 이를 해결하기 위해 CommonJS 그룹은 <strong>모듈 전송 포맷</strong> 이라는 것을 만들었다.</p>\n<p>모듈 전송 포맷의 예시는 <a href=\"https://d2.naver.com/helloworld/12864\">여기</a>를 참고하자. </p>\n<br/>\n<h2 id=\"amd-asynchronous-module-definition\" style=\"position:relative;\"><a href=\"#amd-asynchronous-module-definition\" aria-label=\"amd asynchronous module definition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AMD (Asynchronous Module Definition)</h2>\n<p>CommonJS 그룹에서 의견이 맞지 않아 나온 사람들이 만든 그룹으로 비동기 모듈에 대한 표준안을 다루는 그룹이다</p>\n<ul>\n<li>CommonJS는 서버쪽에서 장점이 많은 반면에 <strong>AMD는 브라우저 쪽에서 더 큰 효과를 발휘한다.</strong> 브라우저에서는 모든 모듈이 다 로딩될 떄까지 기다릴 수 없기 때문에 <strong>비동기 모듈 로딩방식으로</strong> 구현을 해놓았다.</li>\n<li>AMD의 명세는 <code class=\"language-text\">define</code> 함수( 클로저를 이용한 패턴)를 이용해 모듈을 구현하므로 전역변수 문제가 없다. 또한 필요할 때 모듈을 불러오는 방식으로 <code class=\"language-text\">lazy-loading</code> 기법을 응용할 수 있다.</li>\n<li>이 방식에서 사용하는 함수는 <code class=\"language-text\">require</code> 와 <code class=\"language-text\">define</code> 이며, AMD 스팩을 가장 잘 구현한 모듈로더는 <code class=\"language-text\">RequireJS</code>이다.</li>\n</ul>\n<h3 id=\"requirejs-예시\" style=\"position:relative;\"><a href=\"#requirejs-%EC%98%88%EC%8B%9C\" aria-label=\"requirejs 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RequireJS 예시</h3>\n<h4 id=\"indexhtml\" style=\"position:relative;\"><a href=\"#indexhtml\" aria-label=\"indexhtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>index.html</h4>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DOCTYPE</span> <span class=\"token attr-name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>hi<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>  \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">data-main</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>require.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>  </code></pre></div>\n<p><code class=\"language-text\">require.js</code>가 로드되면 <code class=\"language-text\">index.js</code>가 실행되는 구조이다.</p>\n<h4 id=\"indexjs\" style=\"position:relative;\"><a href=\"#indexjs\" aria-label=\"indexjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>index.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">require<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  baseUrl<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n  paths<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token operator\">:</span> <span class=\"token string\">'b'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">printA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">require.config</code> 는 설정부분으로 기본 경로와 각 모듈에 해당하는 경로를 설정해준다. 그 다음 <code class=\"language-text\">require</code> 를 통해서 첫번째 인자에 해당하는 모듈이 로드되었을 경우에 그걸 <code class=\"language-text\">a</code> 로 받아서 <code class=\"language-text\">printA()</code> 함수를 호출하는 콜백함수를 실행한다. 의존성 모듈을 지정해주는 것이다.</p>\n<h4 id=\"ajs\" style=\"position:relative;\"><a href=\"#ajs\" aria-label=\"ajs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>a.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">printA</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token comment\">// 네임스페이스 객체 반환</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>모듈을 구현하는 파일이다. <code class=\"language-text\">define</code> 함수를 통해서 네임스페이스화 한다. </p>\n<br/>\n<h2 id=\"es6es2015-모듈-포맷\" style=\"position:relative;\"><a href=\"#es6es2015-%EB%AA%A8%EB%93%88-%ED%8F%AC%EB%A7%B7\" aria-label=\"es6es2015 모듈 포맷 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6(ES2015) 모듈 포맷</h2>\n<ul>\n<li><strong>ES6</strong>에서 제공하는 브라우저 내장 포맷</li>\n<li>모든 브라우저가 지원되는건 아니다. 이런 경우 트랜스 파일러 <a href=\"https://doonguk.github.io/javascript/babel/\"><code class=\"language-text\">babel</code></a>의 <code class=\"language-text\">@babel/plugin-transform-modules-commonj</code>를 통해 변환시켜서 사용한다.  모듈 A,B가 있고 각각을 <code class=\"language-text\">export</code>로 내보내는 방식이다.</li>\n</ul>\n<h3 id=\"예제\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C\" aria-label=\"예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//A.js</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">A</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token constant\">A</span>\n\n<span class=\"token comment\">//B.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">B</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token constant\">A</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./A.js'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">B</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./B.js'</span></code></pre></div>\n<p>위와 같은 방법도 있고 <code class=\"language-text\">*</code> 와일드 카드를 이용해서 한번에 내보내고 가져오기도 한다.</p>\n<br/>\n<h2 id=\"umd-universal-module-definition\" style=\"position:relative;\"><a href=\"#umd-universal-module-definition\" aria-label=\"umd universal module definition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UMD (Universal Module Definition)</h2>\n<p>그 밖의 모듈 시스템으로는 <code class=\"language-text\">UMD</code> 라는게 있다. 모듈 시스템을 <code class=\"language-text\">AMD</code>와 <code class=\"language-text\">CommonJS</code> 두 그룹으로 나누다보니 호환성에 문제가 많았다. 그래서 나온것이 <code class=\"language-text\">UMD</code>이다. 자세한 내용은 <a href=\"https://www.zerocho.com/category/JavaScript/post/5b67e7847bbbd3001b43fd73\">여기</a> 를 참고하자.</p>\n<br/>\n<p>지금까지가 모듈에 관한 개념이었다! 마지막으로 모듈 번들러와 트랜스파일러에 대해 정리해보자~~</p>\n<h2 id=\"모듈-번들러\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%EB%B2%88%EB%93%A4%EB%9F%AC\" aria-label=\"모듈 번들러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 번들러</h2>\n<p>모듈단위의 개발은 다음과 같은 문제를 발생시킬 수 있다.</p>\n<ul>\n<li>수많은 모듈들이 순서를 어떻게 처리할 것인가? (의존성 처리)</li>\n<li>모듈이 많아질수록 HTTP 요청이 많아질텐데 이로 이한 오버헤드는 어떻게 해결할 것인가?</li>\n<li>ES6+ 스펙의 코드는 어떻게 처리할 것인가?</li>\n</ul>\n<p>위 문제들을 해결하기 위해 등장한 것이 <strong>모듈 번들러(Module Bundler)로 각각의 모듈 의존성을 해결하여 하나의 자바스크립트 파일로 만듦과 동시에 ES6+ 스펙을 ES5로 변환해주는 도구</strong>이다. 대표적인 번들러로는 <strong>Webpack</strong>, Parcel, Rollup 등이 있다.</p>\n<h2 id=\"트랜스파일러\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%9E%9C%EC%8A%A4%ED%8C%8C%EC%9D%BC%EB%9F%AC\" aria-label=\"트랜스파일러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트랜스파일러</h2>\n<ul>\n<li>트랜스 파일러는 <strong>특정 언어로 작성된 코드를 비슷한 다른 코드로 변환시켜주는 역할</strong>을 한다.</li>\n<li>트랜스 파일러가 필요한 이유는 모든 브라우저가 개발자가 작성한 코드를 전부 이해할 수 없기 때문이다.( 말이 애매하네..)</li>\n<li>\n<p>예시로는 다음과 같다.</p>\n<ul>\n<li>ES6+ 를 ES5로 변환 ( 바벨 )</li>\n<li>리액트의 JSX를 자바스크립트 코드로 변환 ( 바벨 )</li>\n<li>타입스크립트를 자바스크립트 코드로 변환 ( 타입스크립트 트랜스파일러 )</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ol>\n<li><a href=\"https://d2.naver.com/helloworld/12864\">https://d2.naver.com/helloworld/12864</a></li>\n<li><a href=\"https://github.com/mjs0514/hokage-website/wiki/%EB%AA%A8%EB%93%88-%ED%8F%AC%EB%A7%B7\">https://github.com/mjs0514/hokage-website/wiki/%EB%AA%A8%EB%93%88-%ED%8F%AC%EB%A7%B7</a></li>\n<li><a href=\"https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs\">https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs</a></li>\n</ol>","frontmatter":{"title":"모듈(Module)","date":"June 05, 2020"}}},"pageContext":{"slug":"/javascript/모듈(module)/","previous":{"fields":{"slug":"/javascript/babel/"},"frontmatter":{"title":"Babel","category":"javascript"}},"next":{"fields":{"slug":"/cs/sop/"},"frontmatter":{"title":"SOP","category":"cs"}}}},"staticQueryHashes":["3128451518","96099027"]}