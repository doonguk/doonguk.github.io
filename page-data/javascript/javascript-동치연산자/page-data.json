{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/javascript-동치연산자/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"69f0e5d9-ed1a-5cdc-9334-1c23651662f6","excerpt":"Equality 연산자  와   는 equality 연산자 이 연산자를 사용하면 연산이 되기 전에 피연산자들을 먼저 비교할 수 있는 형태로 변환 시킨다. 참고  와 의 차이는 값의 할당에 있다. 는 변수는 선언되었지만, 값이 할당되지 않은 것이고, 은 값이 명시적으 변수에 할당된 상태이다. Identity 연산자  와  는 identity 연산자 equality 연산자와 반대로 형변환을 하지 않고 연산한다.","html":"<h2 id=\"equality-연산자\"><a href=\"#equality-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"equality 연산자 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Equality 연산자</h2>\n<ul>\n<li><code class=\"language-text\">==</code> 와  <code class=\"language-text\">!=</code> 는 equality 연산자</li>\n<li>이 연산자를 사용하면 <strong>연산이 되기 전에 피연산자들을 먼저 비교할 수 있는 형태로 변환 시킨다.</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">999</span> <span class=\"token operator\">==</span> <span class=\"token string\">'999'</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">undefined</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// true</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token comment\">// true</span>\n<span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// false</span>\n<span class=\"token string\">'true'</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// false</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token comment\">// false</span></code></pre></div>\n<h4 id=\"참고\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h4>\n<p><code class=\"language-text\">undefined</code> 와 <code class=\"language-text\">null</code>의 차이는 값의 할당에 있다. <code class=\"language-text\">undefined</code>는 변수는 선언되었지만, <strong>값이 할당되지 않은 것</strong>이고, <code class=\"language-text\">null</code>은 <strong>값이 명시적으 변수에 할당된 상태</strong>이다.</p>\n<br/>\n<h2 id=\"identity-연산자\"><a href=\"#identity-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"identity 연산자 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Identity 연산자</h2>\n<ul>\n<li><code class=\"language-text\">===</code> 와 <code class=\"language-text\">!==</code> 는 identity 연산자</li>\n<li>equality 연산자와 반대로 <strong>형변환을 하지 않고 연산한다.</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">254</span> <span class=\"token operator\">===</span> <span class=\"token string\">'254'</span> <span class=\"token comment\">// false</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token comment\">// false</span>\n<span class=\"token keyword\">undefined</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// false</span>\n<span class=\"token string\">'string'</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span></code></pre></div>","frontmatter":{"title":"Javascript 동치연산자","date":"April 30, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/javascript/javascript-동치연산자/","previous":{"fields":{"slug":"/algorithm/20200430-알고리즘/"},"frontmatter":{"title":"20200430 알고리즘","category":"algorithm"}},"next":{"fields":{"slug":"/javascript/javascript-var,-let,-const/"},"frontmatter":{"title":"Javascript var, let, const","category":"javascript"}}}}}