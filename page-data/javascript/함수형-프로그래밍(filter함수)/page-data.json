{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/함수형-프로그래밍(filter함수)/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"b355f82c-d367-534c-b68d-c99e16c9a0ee","excerpt":"Filter 함수는 이러터블의 원소들에서 특정한 원소들만 걸러내고 싶을 때 사용한다. 1. 구현 위 처럼 이터러블의 원소들에서 특정한 원소만 걸러내고 싶을 때 사용한다. 이를 좀 더 추상화 시켜보자. filter 함수의 파라미터로 어떻게 원소를 필터링 할지 체크하는 역할을 갖는 보조함수와 이터러블을 받는다. 특징 이라면 map, reduce 함수와 비슷하게 필터링하는 기능을 보조함수에 위임 했다는 것이다. 예제로는,","html":"<blockquote>\n<p>Filter 함수는 이러터블의 원소들에서 특정한 원소들만 걸러내고 싶을 때 사용한다.</p>\n</blockquote>\n<h3 id=\"1-구현\"><a href=\"#1-%EA%B5%AC%ED%98%84\" aria-label=\"1 구현 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 구현</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> products <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n     <span class=\"token punctuation\">{</span>name <span class=\"token punctuation\">:</span> <span class=\"token string\">'안경'</span><span class=\"token punctuation\">,</span> price <span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">{</span>name <span class=\"token punctuation\">:</span> <span class=\"token string\">'안경2'</span><span class=\"token punctuation\">,</span> price <span class=\"token punctuation\">:</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">{</span>name <span class=\"token punctuation\">:</span> <span class=\"token string\">'안경3'</span><span class=\"token punctuation\">,</span> price <span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">{</span>name <span class=\"token punctuation\">:</span> <span class=\"token string\">'안경4'</span><span class=\"token punctuation\">,</span> price <span class=\"token punctuation\">:</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">{</span>name <span class=\"token punctuation\">:</span> <span class=\"token string\">'안경5'</span><span class=\"token punctuation\">,</span> price <span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">]</span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">filter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> under3000 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> a <span class=\"token keyword\">of</span> products<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>price <span class=\"token operator\">&lt;</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span> under3000<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> under3000\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>filter<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {name : '안경', price : 1000} {name : '안경2', price : 2000 }</span></code></pre></div>\n<p>위 처럼 이터러블의 원소들에서 특정한 원소만 걸러내고 싶을 때 사용한다.</p>\n<p>이를 좀 더 추상화 시켜보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">filter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">,</span> iter</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> a <span class=\"token keyword\">of</span> iter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> res\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span> <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>price <span class=\"token operator\">&lt;</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> products<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token comment\">// {name : '안경', price : 1000} {name : '안경2', price : 2000 }</span></code></pre></div>\n<p>filter 함수의 파라미터로 어떻게 원소를 필터링 할지 체크하는 역할을 갖는 보조함수와 이터러블을 받는다.</p>\n<p>특징 이라면 map, reduce 함수와 비슷하게 필터링하는 기능을 보조함수에 위임 했다는 것이다.</p>\n<p>예제로는,</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> a<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">yield</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">yield</span> <span class=\"token number\">2</span>\n  <span class=\"token keyword\">yield</span> <span class=\"token number\">3</span>\n  <span class=\"token keyword\">yield</span> <span class=\"token number\">4</span>\n  <span class=\"token keyword\">yield</span> <span class=\"token number\">5</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1 3 5</span></code></pre></div>","frontmatter":{"title":"함수형 프로그래밍(filter)","date":"November 27, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/javascript/함수형-프로그래밍(filter함수)/","previous":{"fields":{"slug":"/javascript/함수형-프로그래밍(reduce함수)/"},"frontmatter":{"title":"함수형 프로그래밍(reduce)","category":"javascript"}},"next":null}}}