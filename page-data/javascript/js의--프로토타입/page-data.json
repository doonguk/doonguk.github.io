{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/js의--프로토타입/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"b0aadce2-bd13-56c0-a037-a4170054ae91","excerpt":"자바스크립트는 프로토타입 기반 언어라고 불린다. 프로토타입이라는게 뭘까? 간단한 예시 a 와 b 인스턴스는 와 를 공통으로 가지고 있는데 메모리에는 eyes와 nose가 각각 2개씩 총 4개가 할당된다. 만약 100개의 인스턴스를 만들면 200개의 변수가 메모리에 할당된다. 이런 문제를  으로 해결할 수 있다! 이게 가능한 이유는 이라는 빈 객체가 존재하고 함수를 통해 생성된 객체를 이 객체를 참조할 수 있기 때문이다. Prototype LInk 와 Prototype Object  JS…","html":"<p>자바스크립트는 프로토타입 기반 언어라고 불린다. 프로토타입이라는게 뭘까?</p>\n<h2 id=\"간단한-예시\"><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%98%88%EC%8B%9C\" aria-label=\"간단한 예시 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>간단한 예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eyes <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nose <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>a 와 b 인스턴스는 <code class=\"language-text\">eyes</code>와 <code class=\"language-text\">nose</code>를 <strong>공통</strong>으로 가지고 있는데 메모리에는 eyes와 nose가 각각 2개씩 총 4개가 할당된다. 만약 100개의 인스턴스를 만들면 200개의 변수가 메모리에 할당된다. 이런 문제를 <code class=\"language-text\">Prototype</code> 으로 해결할 수 있다!</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>eyes <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nPerson<span class=\"token punctuation\">.</span>porotoype<span class=\"token punctuation\">.</span>nose <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>eyes<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span></code></pre></div>\n<p>이게 가능한 이유는 <code class=\"language-text\">Person.prototype</code>이라는 빈 객체가 존재하고 <code class=\"language-text\">Person</code>함수를 통해 생성된 객체를 이 객체를 참조할 수 있기 때문이다.</p>\n<h2 id=\"prototype-link-와-prototype-object\"><a href=\"#prototype-link-%EC%99%80-prototype-object\" aria-label=\"prototype link 와 prototype object permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prototype LInk 와 Prototype Object</h2>\n<blockquote>\n<p> JS에는 Prototype Link와 Prototype Object가 존재하고 이 둘을 통틀어 Prototype이라고 부른다.</p>\n</blockquote>\n<h3 id=\"prototype-object\"><a href=\"#prototype-object\" aria-label=\"prototype object permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prototype Object</h3>\n<p>우선 JS에서 <strong>객체는 언제나 함수</strong>로 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> pObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 함수로 객체를 생성</span></code></pre></div>\n<p>객체 리터럴 방식도 마찬가지다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드는 <code class=\"language-text\">const a = new Object()</code> 와 같다. <code class=\"language-text\">Object</code>라는 함수를 통해서 객체가 생성되는 것이다. ( 기본적으로 내장된 함수 )</p>\n<p><code class=\"language-text\">Object</code>와 마찬가지로 <code class=\"language-text\">Array</code>, <code class=\"language-text\">Function</code> 모두 함수로 정의되어 있다. 이것이 Prototype Object와 무슨 관계일까?</p>\n<p><strong>함수가 정의될 때는 2가지 일이 동시에 이루어진다.</strong></p>\n<ol>\n<li>해당 함수에 <code class=\"language-text\">constructor</code> 자격 부여 ( 객체를 만들 수 있는 자격 부여 )</li>\n</ol>\n<p>이것이 함수가 new 키워드를 사용할 수 있는 이유이다.</p>\n<ol start=\"2\">\n<li>해당 함수의 <code class=\"language-text\">Prototype Object</code> 생성 및 연결</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/39187116/83596781-7edd3c80-a5a0-11ea-9cab-b3b7992ce2e4.png\" alt=\"image\"></p>\n<p>생성된 함수는 <code class=\"language-text\">prototype</code> 프로퍼티를 통해 <code class=\"language-text\">Prototype Object</code>에 접근할 수 있다. <code class=\"language-text\">Prototype Object</code>는 일반적인 객체와 같고 기본적으로 <code class=\"language-text\">constructor</code>, <code class=\"language-text\">__proto__</code> 프로퍼티를 갖고있다.</p>\n<p><code class=\"language-text\">constructor</code>는 Prototype Object와 같이 생성되었던 함수를 가리키고 있다.</p>\n<p><code class=\"language-text\">__proto__</code>는 <code class=\"language-text\">Prototype Link</code> 이다.</p>\n<h3 id=\"prototype-link\"><a href=\"#prototype-link\" aria-label=\"prototype link permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prototype Link</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>eyes <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>nose <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>eyes<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span></code></pre></div>\n<p>다시 위에서 했던 예시를 보면 a 에는 eyes 라는 프로퍼티가 없는데 어떻게 <code class=\"language-text\">Prototype Object</code>에 있는 속성을 참조할 수 있을까?</p>\n<p>그 이유는 a 가 갖고있는 <code class=\"language-text\">__proto__</code> 속성 때문이다.</p>\n<p><code class=\"language-text\">prototype</code> 속성은 함수만 갖고있지만 <code class=\"language-text\">__proto__</code> 속성은 모든 객체가 빠짐없이 갖고 있다.</p>\n<p><strong>이 속성은 객체가 생성될 때 조상이었던 함수의 <code class=\"language-text\">Prototype Object</code>를 가리킨다.</strong> ( 여기서 a 인스턴스는 Person 함수로부터 생성되었으니 Person.Prototype을 가리킨다. )</p>\n<p><img src=\"https://user-images.githubusercontent.com/39187116/83597309-f790c880-a5a1-11ea-9407-6b65f7a0f6fa.png\" alt=\"image\"></p>\n<p>kim 객체는 eyes를 직접 가지고 있지 않기 때문에 eyes 속성을 찾을 때 까지 상위 프로토타입을 탐색한다.</p>\n<p>최상위인 Obejct의 Prototype Object까지 도달했는데도 못찾았을 경우 <code class=\"language-text\">undefined</code>를 리턴한다.</p>\n<p>이렇게 <strong><code class=\"language-text\">__proto__</code> 속성을 통해 상위 프로토타입과 연결되어있는 형태를 프로토타입 체인이라고 한다.</strong></p>\n<p>이런 프로토타입 체인 구조 때문에 모든 객체는 <code class=\"language-text\">Object</code>의 자식이라고 불리고, <code class=\"language-text\">Object.Prototyp</code>에 있는 모든 속성을 사용할 수 있다.</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://medium.com/@bluesh55/javascript-prototype-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-f8e67c286b67\">https://medium.com/@bluesh55/javascript-prototype-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-f8e67c286b67</a></p>","frontmatter":{"title":"JS의 프로토타입","date":"June 03, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/javascript/js의--프로토타입/","previous":{"fields":{"slug":"/javascript/메모리-힙-&-콜-스택/"},"frontmatter":{"title":"메모리 힙 & 콜 스택","category":"javascript"}},"next":{"fields":{"slug":"/cs/웹-서버-&-was/"},"frontmatter":{"title":"웹 서버 & WAS","category":"cs"}}}}}