{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/map---javascript/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"8f83013d-6903-548b-b183-d87fa5a5d0f2","excerpt":"객체는 Key - Value Collection 이며, 삽입 순서도 기억한다. 어떠한 자료형(객체, 원시값)도 Key나 Value로 올 수 있다. 개발하다 알게된 것 Typescript 에서 Map 자료구조의 타입은 로 표현 가능하다. 선언  를 원소로 갖는 이터러블을 인자로 받는다. 각 값들은 삽입 순서대로 Map 객체에 추가된다. new Map() vs Object ( Map을 사용하는 이유 ) Object는 프로토타입을 가지므로 기본 키가 존재할 수 있다. 하지만 Map…","html":"<p><code class=\"language-text\">Map</code> 객체는 Key - Value Collection 이며, 삽입 순서도 기억한다. 어떠한 자료형(객체, 원시값)도 Key나 Value로 올 수 있다.</p>\n<h3 id=\"개발하다-알게된-것\"><a href=\"#%EA%B0%9C%EB%B0%9C%ED%95%98%EB%8B%A4-%EC%95%8C%EA%B2%8C%EB%90%9C-%EA%B2%83\" aria-label=\"개발하다 알게된 것 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발하다 알게된 것</h3>\n<ul>\n<li>Typescript 에서 Map 자료구조의 타입은 <code class=\"language-text\">Map&lt;K,V&gt;</code>로 표현 가능하다.</li>\n</ul>\n<br/>\n<h3 id=\"선언\"><a href=\"#%EC%84%A0%EC%96%B8\" aria-label=\"선언 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>선언</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>iterable<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">[key, value]</code> 를 원소로 갖는 이터러블을 인자로 받는다. 각 값들은 삽입 순서대로 Map 객체에 추가된다.</p>\n<h3 id=\"new-map-vs-object--map을-사용하는-이유-\"><a href=\"#new-map-vs-object--map%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0-\" aria-label=\"new map vs object  map을 사용하는 이유  permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new Map() vs Object ( Map을 사용하는 이유 )</h3>\n<ol>\n<li>Object는 프로토타입을 가지므로 기본 키가 존재할 수 있다. 하지만 Map은 명시적으로 추가시킨 키만 존재한다. (키 충돌 위험이 없다.)</li>\n<li>Object는 키에 반드시 String 또는 Symbol 자료형이 와야한다. 하지만 Map은 어떤 값이 와도 된다.</li>\n<li>Map의 키는 정렬 가능하다. </li>\n<li>Map은 <code class=\"language-text\">size</code>를 이용해서 크기를 쉽게 구할 수 있다. Object는 직접 알아내야 한다.</li>\n<li>Map은 순회가 가능하다. 하지만 Object는 Key 배열을 구해서 순회해야 한다.</li>\n<li>잦은 key - value 쌍 추가와 제거에 성능이 더 좋다.</li>\n</ol>\n<h3 id=\"속성\"><a href=\"#%EC%86%8D%EC%84%B1\" aria-label=\"속성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>속성</h3>\n<ol>\n<li><code class=\"language-text\">Map.length</code> :  값이 0인 속성. (<strong>인스턴스의 <code class=\"language-text\">size</code> 와 다르다.</strong>)</li>\n<li><code class=\"language-text\">Map.prototype</code>  : <code class=\"language-text\">Map</code> 생성자의 프로토타입을 나타낸다. 모든 <code class=\"language-text\">Map</code>  인스턴스에 속성을 추가할 수 있다. </li>\n</ol>\n<br/>\n<h3 id=\"map-인스턴스\"><a href=\"#map-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\" aria-label=\"map 인스턴스 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Map 인스턴스</h3>\n<h4 id=\"속성-1\"><a href=\"#%EC%86%8D%EC%84%B1-1\" aria-label=\"속성 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>속성</h4>\n<ol>\n<li><code class=\"language-text\">Map.prototype.constructor</code>  : 인스턴스의 프로토타입을 만든 함수를 반환한다. 이는 기본으로 <code class=\"language-text\">Map</code> 함수이다.</li>\n<li><code class=\"language-text\">Map.prototype.size</code> : 객체 내 Key-Value쌍의 수를 리턴한다.</li>\n</ol>\n<h4 id=\"메소드\"><a href=\"#%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"메소드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메소드</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nm<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nm<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nm<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Object'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">set(key, value)</code> : Map에 Key-Value Pair원소를 추가한다.</li>\n<li><code class=\"language-text\">clear()</code> : Map 객체의 모든 Key-Value pair를 제거한다.</li>\n<li><code class=\"language-text\">delete(key)</code> : Map에서 Key와 해당되는 Value를 제거하고 있는 값이 제거되면 true를 리턴한다. 아니면 false</li>\n<li><code class=\"language-text\">entries()</code> : (삽입 순으로) 객체 내 값에 대한 <code class=\"language-text\">[key, value]</code> 새로운 이터레이터를 리턴한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> v <span class=\"token keyword\">of</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ['A',1], [()=>{}, 'function'], [{}, 'Object']</span></code></pre></div>\n<ol start=\"5\">\n<li><code class=\"language-text\">has(key)</code> : Map 객체 안에 주어진 Key/Value pair가 있는지 검사하고 boolean 값을 반환한다.</li>\n<li><code class=\"language-text\">get(key)</code> : 주어진 Key에 대응되는 value를 리턴하고 없다면 undefined를 리턴한다.</li>\n<li><code class=\"language-text\">keys()</code> , <code class=\"language-text\">values()</code> : 삽입 순서대로 key로만 이루어진 또는 value로만 이루어진 이터레이터를 반환한다.</li>\n</ol>\n<h3 id=\"참고\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Map\">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Map</a></p>","frontmatter":{"title":"Map - Javascript","date":"April 21, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/javascript/map---javascript/","previous":{"fields":{"slug":"/javascript/set---javascript/"},"frontmatter":{"title":"Set - JavaScript","category":"javascript"}},"next":{"fields":{"slug":"/algorithm/20200421-알고리즘/"},"frontmatter":{"title":"20200421 알고리즘","category":"algorithm"}}}}}