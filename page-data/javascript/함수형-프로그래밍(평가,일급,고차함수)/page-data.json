{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/함수형-프로그래밍(평가,일급,고차함수)/","result":{"data":{"site":{"siteMetadata":{"title":"Study Log","author":"[HongDongUk]","siteUrl":"https://donguk.netlify.com","comment":{"disqusShortName":"","utterances":"doonguk/doonguk.github.io"},"sponsor":{"buyMeACoffeeId":"doonguk"}}},"markdownRemark":{"id":"fd2a1646-4d94-50b4-b643-fc625349eadc","excerpt":"평가와 일급 그리고 고차 함수 평가 평가랑 코드가 계산( Evaluation ) 되어 값을 만드는 것 일급 값으로 다룰 수 있다. 변수에 담을 수 있다. 함수의 인자로 사용될 수 있다. 함수의 결과로 사용될 수 있다. 함수의 일급 함수를 값으로 다룰 수 있다. 조합성과 추상화의 도구( 위 4가지 특성 생각 ) 고차 함수 함수를 값으로 다루는 함수 Case 1)  함수를 인자로 받아서 실행하는 함수 Case 2) 함수를 만들어 리턴하는 함수 ( 클로저를 만들어 리턴하는 함수 )","html":"<h3 id=\"평가와-일급-그리고-고차-함수\"><a href=\"#%ED%8F%89%EA%B0%80%EC%99%80-%EC%9D%BC%EA%B8%89-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EA%B3%A0%EC%B0%A8-%ED%95%A8%EC%88%98\" aria-label=\"평가와 일급 그리고 고차 함수 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>평가와 일급 그리고 고차 함수</h3>\n<ul>\n<li>평가</li>\n</ul>\n<p>평가랑 코드가 계산( Evaluation ) 되어 값을 만드는 것</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span>\n<span class=\"token operator\">></span> <span class=\"token number\">6</span> <span class=\"token comment\">//1+2가 먼저 평가되고 3+3이 평가되어 6을 만들었다.</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 배열로 평가됨</span></code></pre></div>\n<ul>\n<li>일급</li>\n<li><strong>값으로 다룰 수 있다.</strong></li>\n<li><strong>변수에 담을 수 있다.</strong></li>\n<li><strong>함수의 인자로 사용될 수 있다.</strong></li>\n<li><strong>함수의 결과로 사용될 수 있다.</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token comment\">//값으로 다룰 수 있다. 변수에 담을 수 있다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add10</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token comment\">// 함수의 인자로 사용될 수 있다.</span>\n<span class=\"token keyword\">const</span> r <span class=\"token operator\">=</span> <span class=\"token function\">add10</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 함수의 결과로 사용될 수 있다.</span>\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 20</span></code></pre></div>\n<h3 id=\"함수의-일급\"><a href=\"#%ED%95%A8%EC%88%98%EC%9D%98-%EC%9D%BC%EA%B8%89\" aria-label=\"함수의 일급 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수의 일급</h3>\n<ul>\n<li>함수를 값으로 다룰 수 있다.</li>\n<li>조합성과 추상화의 도구( 위 4가지 특성 생각 )</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> log <span class=\"token operator\">=</span> console<span class=\"token punctuation\">.</span>log\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add5</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token comment\">// add5라는 변수에 a=>a+5 라는 함수를 값으로 전달</span>\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span>add5<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 함수의 인자로 함수가 사용 가능</span>\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 함수는 평가에서 값으로 만들어져 다른 함수( 여기서는 log )에 전달 될 수 있다.</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token number\">5</span> <span class=\"token comment\">// 함수의 결과로 함수를 사용 가능하다.</span>\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// () =>5</span>\n<span class=\"token keyword\">const</span> f2 <span class=\"token operator\">=</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//5</span></code></pre></div>\n<h3 id=\"고차-함수\"><a href=\"#%EA%B3%A0%EC%B0%A8-%ED%95%A8%EC%88%98\" aria-label=\"고차 함수 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고차 함수</h3>\n<blockquote>\n<p>함수를 값으로 다루는 함수</p>\n</blockquote>\n<ul>\n<li>Case 1)  함수를 인자로 받아서 실행하는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">apply1</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">f</span> <span class=\"token operator\">=></span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add2</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> a<span class=\"token operator\">+</span><span class=\"token number\">2</span>\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">apply1</span><span class=\"token punctuation\">(</span>add2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3으로 평가</span>\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">apply1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> a<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0으로 평가</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">times</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 함수를 인자로 받아서 n 번 실행하는 함수</span>\n  <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">times</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0, 1, 2</span>\n<span class=\"token function\">times</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10, 11, 12</span></code></pre></div>\n<ul>\n<li>Case 2) 함수를 만들어 리턴하는 함수 ( 클로저를 만들어 리턴하는 함수 )</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addMaker</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">b</span> <span class=\"token operator\">=></span> a<span class=\"token operator\">+</span>b\n<span class=\"token comment\">// 여기서 클로저란 b => a+b 라는 함수가 a를 계속해서 기억하고 있다는 뜻</span>\n<span class=\"token comment\">// 즉, b => a+b는 함수이자 a를 기억하는 클로저 이다.</span>\n<span class=\"token keyword\">const</span> add <span class=\"token operator\">=</span> <span class=\"token function\">addMaker</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// addMaker는 함수를 리턴하는 함수</span>\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 15</span>\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 20</span></code></pre></div>","frontmatter":{"title":"함수형 프로그래밍(평가,일급,고차함수)","date":"November 21, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/javascript/함수형-프로그래밍(평가,일급,고차함수)/","previous":{"fields":{"slug":"/python/파이썬-기초-정리(자료형-딕셔너리)/"},"frontmatter":{"title":"파이썬 기초 정리(자료형-딕셔너리)","category":"python"}},"next":{"fields":{"slug":"/javascript/함수형-프로그래밍(이터러블,-이터레이터)/"},"frontmatter":{"title":"함수형 프로그래밍(이터러블, 이터레이터)","category":"javascript"}}}}}